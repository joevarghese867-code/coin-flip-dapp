{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 18, "column": 0}, "map": {"version":3,"sources":["file:///home/joe/bootcamp-temp/coin-flip-frontend/src/components/wallet/WalletButton.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const WalletButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call WalletButton() from the server but WalletButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/wallet/WalletButton.tsx <module evaluation>\",\n    \"WalletButton\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,eAAe,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,wEACA","debugId":null}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":["file:///home/joe/bootcamp-temp/coin-flip-frontend/src/components/wallet/WalletButton.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const WalletButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call WalletButton() from the server but WalletButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/wallet/WalletButton.tsx\",\n    \"WalletButton\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,eAAe,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,oDACA","debugId":null}},
    {"offset": {"line": 42, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 170, "column": 0}, "map": {"version":3,"sources":["file:///home/joe/bootcamp-temp/coin-flip-frontend/src/components/cluster/cluster-ui.tsx"],"sourcesContent":["import { ReactNode } from 'react'\n\ninterface ExplorerLinkProps {\n  path: string\n  label: ReactNode\n  className?: string\n}\n\nexport function ExplorerLink({ path, label, className }: ExplorerLinkProps) {\n  const baseUrl = 'https://explorer.solana.com'\n  return (\n    <a \n      href={`${baseUrl}/${path}?cluster=devnet`}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      className={`text-blue-600 hover:text-blue-800 underline ${className}`}\n    >\n      {label}\n    </a>\n  )\n}"],"names":[],"mappings":";;;;;AAQO,SAAS,aAAa,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAqB;IACxE,MAAM,UAAU;IAChB,qBACE,8OAAC;QACC,MAAM,GAAG,QAAQ,CAAC,EAAE,KAAK,eAAe,CAAC;QACzC,QAAO;QACP,KAAI;QACJ,WAAW,CAAC,4CAA4C,EAAE,WAAW;kBAEpE;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 193, "column": 0}, "map": {"version":3,"sources":["file:///home/joe/bootcamp-temp/coin-flip-frontend/src/lib/utils.ts"],"sourcesContent":["export function ellipsify(str = '', len = 4) {\n  if (str.length > 30) {\n    return str.substring(0, len) + '..' + str.substring(str.length - len, str.length)\n  }\n  return str\n}"],"names":[],"mappings":";;;AAAO,SAAS,UAAU,MAAM,EAAE,EAAE,MAAM,CAAC;IACzC,IAAI,IAAI,MAAM,GAAG,IAAI;QACnB,OAAO,IAAI,SAAS,CAAC,GAAG,OAAO,OAAO,IAAI,SAAS,CAAC,IAAI,MAAM,GAAG,KAAK,IAAI,MAAM;IAClF;IACA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 206, "column": 0}, "map": {"version":3,"sources":["file:///home/joe/bootcamp-temp/coin-flip-frontend/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 261, "column": 0}, "map": {"version":3,"sources":["file:///home/joe/bootcamp-temp/coin-flip-frontend/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 356, "column": 0}, "map": {"version":3,"sources":["file:///home/joe/bootcamp-temp/coin-flip-frontend/src/components/coin-flip/coin-flip-ui.tsx"],"sourcesContent":["import { PublicKey } from '@solana/web3.js'\nimport { useMemo, useState, useEffect } from 'react'\nimport { ExplorerLink } from '../cluster/cluster-ui'\nimport { useCoinFlipProgram, useCoinFlipProgramAccount } from './coin_flip-data-access'\nimport { ellipsify } from '@/lib/utils'\nimport { Button } from '@/components/ui/button'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '../ui/card'\nimport { useWallet } from '@solana/wallet-adapter-react'\nimport { Coins, Settings, DollarSign } from 'lucide-react'\nimport BN from 'bn.js'\n\nconst LAMPORTS_PER_SOL = 1_000_000_000\n\nexport function CoinFlipCreate() {\n  const { initialize, accounts } = useCoinFlipProgram()\n  const wallet = useWallet()\n  const [feePercentage, setFeePercentage] = useState(5)\n\n  const existingGameState = useMemo(() => {\n    if (!wallet.publicKey || !accounts.data) return null\n    return accounts.data.find(account => account.account.owner.equals(wallet.publicKey!))\n  }, [accounts.data, wallet.publicKey])\n\n  const handleInitialize = () => {\n    if (!wallet.publicKey || existingGameState) return\n    initialize.mutateAsync({ owner: wallet.publicKey, fee_percentage: feePercentage })\n  }\n\n  return (\n    <Card className=\"mb-6\">\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          <Settings className=\"h-5 w-5\" />\n          Create Game State\n        </CardTitle>\n        <CardDescription>Initialize a new game state to start the coin flip game</CardDescription>\n      </CardHeader>\n      <CardContent>\n        <div className=\"space-y-4\">\n          <div className=\"flex items-center gap-4\">\n            <label className=\"text-sm font-medium text-gray-700\">House Fee:</label>\n            <input\n              type=\"number\"\n              min={0}\n              max={100}\n              value={feePercentage}\n              onChange={(e) => setFeePercentage(Number(e.target.value))}\n              className=\"w-20 px-3 py-2 border rounded-md\"\n            />\n            <span className=\"text-sm\">%</span>\n          </div>\n          \n          <Button \n            onClick={handleInitialize} \n            disabled={initialize.isPending || !!existingGameState}\n            className=\"w-full\"\n          >\n            {initialize.isPending ? 'Initializing...' : \n             existingGameState ? 'Game State Already Exists' : \n             'Initialize Game State'}\n          </Button>\n        </div>\n      </CardContent>\n    </Card>\n  )\n}\n\nexport function CoinFlipList() {\n  const { accounts, getProgramAccount } = useCoinFlipProgram()\n\n  if (getProgramAccount.isLoading) {\n    return <div className=\"flex justify-center py-8\">Loading...</div>\n  }\n  \n  if (!getProgramAccount.data?.value) {\n    return (\n      <Card>\n        <CardContent className=\"pt-6\">\n          <div className=\"text-center py-8\">\n            <p>Program account not found. Make sure you have deployed the program.</p>\n          </div>\n        </CardContent>\n      </Card>\n    )\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {accounts.isLoading ? (\n        <div className=\"flex justify-center py-8\">Loading game states...</div>\n      ) : accounts.data?.length ? (\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {accounts.data?.map((account) => (\n            <CoinFlipCard key={account.publicKey.toString()} gameStatePubkey={account.publicKey} />\n          ))}\n        </div>\n      ) : (\n        <Card>\n          <CardContent className=\"pt-6\">\n            <div className=\"text-center py-8\">\n              <h2 className=\"text-xl font-bold mb-2\">No Game States</h2>\n              <p>Create one above to get started!</p>\n            </div>\n          </CardContent>\n        </Card>\n      )}\n    </div>\n  )\n}\n\nfunction CoinFlipCard({ gameStatePubkey }: { gameStatePubkey: PublicKey }) {\n  const wallet = useWallet()\n  const { deposit_to_gamestate, withdraw, accounts, program } = useCoinFlipProgram()\n  \n  const [vaultAmount, setVaultAmount] = useState<number>(0)\n  const [betChoice, setBetChoice] = useState<number>(0)\n  const [placeBetAmount, setPlaceBetAmount] = useState<number>(0)\n  const [betResult, setBetResult] = useState<null | 'won' | 'lost' | 'pending'>(null)\n\n  const gameStateData = useMemo(() => {\n    return accounts.data?.find(account => account.publicKey.equals(gameStatePubkey))\n  }, [accounts.data, gameStatePubkey])\n\n  const betAccountQuery = useCoinFlipProgramAccount({\n    user: wallet.publicKey || new PublicKey('11111111111111111111111111111111'),\n    owner: gameStateData?.account?.owner || new PublicKey('11111111111111111111111111111111'),\n    gameNumber: gameStateData?.account?.totalGames?.toNumber()\n  })\n\n  const isOwner = wallet.publicKey && gameStateData?.account?.owner.equals(wallet.publicKey)\n\n  const potentialWinnings = useMemo(() => {\n    if (!placeBetAmount || !gameStateData?.account) return 0\n    const payout = placeBetAmount * 2\n    const fee = (payout * gameStateData.account.feePercentage.toNumber()) / 100\n    return payout - fee\n  }, [placeBetAmount, gameStateData?.account])\n\n  const existingBetInfo = useMemo(() => {\n    const betData = betAccountQuery.accountQuery.data\n    if (!betData?.settled) return null\n    \n    return {\n      amount: betData.amount.toNumber() / LAMPORTS_PER_SOL,\n      choice: betData.choice === 0 ? 'Heads' : 'Tails',\n      won: betData.won\n    }\n  }, [betAccountQuery.accountQuery.data])\n\n  // Reset form values after successful operations\n  useEffect(() => {\n    if (deposit_to_gamestate.isSuccess || withdraw.isSuccess) {\n      setVaultAmount(0)\n    }\n  }, [deposit_to_gamestate.isSuccess, withdraw.isSuccess])\n\n  useEffect(() => {\n    if (betAccountQuery.place_bet.isPending) {\n      setBetResult('pending')\n    }\n  }, [betAccountQuery.place_bet.isPending])\n\n  const handleVaultOperation = async (operation: 'deposit' | 'withdraw') => {\n    if (!wallet.publicKey || !vaultAmount || vaultAmount <= 0) return\n\n    const amountLamports = vaultAmount * LAMPORTS_PER_SOL\n    \n    try {\n      if (operation === 'deposit') {\n        await deposit_to_gamestate.mutateAsync({ owner: wallet.publicKey, amount: amountLamports })\n      } else {\n        await withdraw.mutateAsync({ owner: wallet.publicKey, amount: amountLamports })\n      }\n    } catch (error) {\n      console.error(`${operation} failed:`, error)\n    }\n  }\n\n  const checkBetResult = async (gameNumber: number) => {\n    if (!wallet.publicKey) return\n\n    const gameNumberBuf = new BN(gameNumber).toArrayLike(Buffer, 'le', 8)\n    const [correctBetAccount] = PublicKey.findProgramAddressSync(\n      [Buffer.from('bet_account'), wallet.publicKey.toBuffer(), gameNumberBuf],\n      program.programId\n    )\n\n    let attempts = 0\n    const maxAttempts = 10\n\n    const attemptFetch = async () => {\n      attempts++\n      \n      try {\n        const betData = await program.account.betAccount.fetch(correctBetAccount)\n        \n        if (betData?.settled) {\n          setBetResult(betData.won ? 'won' : 'lost')\n          setPlaceBetAmount(0)\n          accounts.refetch()\n          return\n        }\n        \n        if (attempts < maxAttempts) {\n          setTimeout(attemptFetch, 2000)\n        } else {\n          setBetResult(null)\n          setPlaceBetAmount(0)\n        }\n      } catch (error) {\n        if (attempts < maxAttempts) {\n          setTimeout(attemptFetch, 2000)\n        } else {\n          setBetResult(null)\n          setPlaceBetAmount(0)\n        }\n      }\n    }\n\n    setTimeout(attemptFetch, 3000)\n  }\n\n  const handlePlaceBet = async () => {\n    if (!wallet.publicKey || !gameStateData?.account?.owner || !placeBetAmount || placeBetAmount <= 0) {\n      return\n    }\n\n    setBetResult('pending')\n    const amountLamports = placeBetAmount * LAMPORTS_PER_SOL\n\n    try {\n      const gameNumberForBet = betAccountQuery.currentGameNumber\n      \n      await betAccountQuery.place_bet.mutateAsync({\n        amount: amountLamports,\n        choice: betChoice\n      })\n      \n      checkBetResult(gameNumberForBet)\n    } catch (error) {\n      console.error(\"Bet failed:\", error)\n      setBetResult(null)\n    }\n  }\n\n  if (!gameStateData?.account) {\n    return <div>Loading game state...</div>\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          <Coins className=\"h-5 w-5\" />\n          Game State\n        </CardTitle>\n        <CardDescription>\n          <ExplorerLink \n            path={`account/${gameStatePubkey}`} \n            label={ellipsify(gameStatePubkey.toString())}\n          />\n        </CardDescription>\n      </CardHeader>\n      \n      <CardContent className=\"space-y-4\">\n        {/* Game State Info */}\n        <div className=\"bg-blue-50 rounded-lg p-4 border\">\n          <div className=\"grid grid-cols-2 gap-4 text-sm\">\n            <div>\n              <span className=\"font-medium text-blue-700\">Total Games:</span>\n              <p className=\"font-semibold text-blue-900\">{gameStateData.account.totalGames.toString()}</p>\n            </div>\n            <div>\n              <span className=\"font-medium text-blue-700\">Vault Balance:</span>\n              <p className=\"font-semibold text-blue-900\">\n                {(gameStateData.account.totalAmount.toNumber() / LAMPORTS_PER_SOL).toFixed(4)} SOL\n              </p>\n            </div>\n            <div>\n              <span className=\"font-medium text-blue-700\">House Fee:</span>\n              <p className=\"font-semibold text-blue-900\">{gameStateData.account.feePercentage.toString()}%</p>\n            </div>\n            <div>\n              <span className=\"font-medium text-blue-700\">Owner:</span>\n              <p className=\"font-semibold text-blue-900\">{ellipsify(gameStateData.account.owner.toString())}</p>\n            </div>\n          </div>\n        </div>\n\n        {/* Previous Bet Result */}\n        {existingBetInfo && (\n          <div className={`rounded-lg p-4 border ${\n            existingBetInfo.won ? 'bg-green-50 border-green-200' : 'bg-red-50 border-red-200'\n          }`}>\n            <h4 className=\"font-semibold mb-2\">Your Last Bet</h4>\n            <div className=\"text-sm space-y-1\">\n              <p><span className=\"font-medium\">Amount:</span> {existingBetInfo.amount.toFixed(4)} SOL</p>\n              <p><span className=\"font-medium\">Choice:</span> {existingBetInfo.choice}</p>\n              <p className={`font-semibold ${existingBetInfo.won ? 'text-green-600' : 'text-red-600'}`}>\n                {existingBetInfo.won ? '🎉 You Won!' : '😢 You Lost'}\n              </p>\n            </div>\n          </div>\n        )}\n\n        {/* Vault Operations - Owner Only */}\n        {isOwner && (\n          <div className=\"bg-white rounded-lg p-4 border\">\n            <h4 className=\"font-semibold mb-3 flex items-center gap-2\">\n              <DollarSign className=\"h-4 w-4 text-green-600\" />\n              Vault Operations\n            </h4>\n            \n            <div className=\"space-y-3\">\n              <div className=\"flex items-center gap-2\">\n                <input\n                  type=\"number\"\n                  min={0}\n                  step={0.1}\n                  placeholder=\"Amount in SOL\"\n                  value={vaultAmount || ''}\n                  onChange={(e) => setVaultAmount(Number(e.target.value))}\n                  disabled={deposit_to_gamestate.isPending || withdraw.isPending}\n                  className=\"flex-1 px-3 py-2 border rounded-md text-gray-900\"\n                />\n                <span className=\"text-sm text-gray-700\">SOL</span>\n              </div>\n              \n              <div className=\"flex gap-2\">\n                <Button \n                  onClick={() => handleVaultOperation('deposit')} \n                  disabled={deposit_to_gamestate.isPending || withdraw.isPending || !vaultAmount}\n                  className=\"flex-1\"\n                >\n                  {deposit_to_gamestate.isPending ? 'Depositing...' : 'Deposit'}\n                </Button>\n                \n                <Button \n                  onClick={() => handleVaultOperation('withdraw')} \n                  disabled={withdraw.isPending || deposit_to_gamestate.isPending || !vaultAmount}\n                  variant=\"destructive\" \n                  className=\"flex-1\"\n                >\n                  {withdraw.isPending ? 'Withdrawing...' : 'Withdraw'}\n                </Button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Betting Section */}\n        <div className=\"bg-purple-50 rounded-lg p-4 border\">\n          <h4 className=\"font-semibold mb-3 flex items-center gap-2\">\n            <Coins className=\"h-4 w-4 text-purple-600\" />\n            Place Your Bet\n          </h4>\n          \n          <div className=\"space-y-4\">\n            <div className=\"flex items-center gap-2\">\n              <input\n                type=\"number\"\n                min={0}\n                step={0.1}\n                placeholder=\"Bet amount in SOL\"\n                value={placeBetAmount || ''}\n                onChange={(e) => setPlaceBetAmount(Number(e.target.value))}\n                disabled={betAccountQuery.place_bet.isPending}\n                className=\"flex-1 px-3 py-2 border rounded-md text-gray-900\"\n              />\n              <span className=\"text-sm text-gray-700\">SOL</span>\n            </div>\n\n            {/* Potential Winnings */}\n            {placeBetAmount > 0 && (\n              <div className=\"p-3 bg-yellow-50 rounded-lg border border-yellow-200\">\n                <p className=\"text-sm text-yellow-800\">\n                  <span className=\"font-medium\">Potential Winnings:</span> {potentialWinnings.toFixed(4)} SOL\n                </p>\n                <p className=\"text-xs text-yellow-700 mt-1\">\n                  2x bet amount minus {gameStateData.account.feePercentage.toString()}% house fee\n                </p>\n              </div>\n            )}\n\n            {/* Choice Buttons */}\n            <div className=\"flex gap-2\">\n              <Button\n                variant={betChoice === 0 ? 'default' : 'outline'}\n                onClick={() => setBetChoice(0)}\n                disabled={betAccountQuery.place_bet.isPending}\n                className={`flex-1 ${betChoice === 0 ? 'bg-orange-500 hover:bg-orange-600 text-white' : 'border-orange-500 text-orange-500 hover:bg-orange-50'}`}\n              >\n                🪙 Heads\n              </Button>\n              <Button\n                variant={betChoice === 1 ? 'default' : 'outline'}\n                onClick={() => setBetChoice(1)}\n                disabled={betAccountQuery.place_bet.isPending}\n                className={`flex-1 ${betChoice === 1 ? 'bg-blue-500 hover:bg-blue-600 text-white' : 'border-blue-500 text-blue-500 hover:bg-blue-50'}`}\n              >\n                🎯 Tails\n              </Button>\n            </div>\n\n            {/* Place Bet Button */}\n            <Button\n              onClick={handlePlaceBet}\n              disabled={betAccountQuery.place_bet.isPending || !placeBetAmount || placeBetAmount <= 0 || !wallet.publicKey}\n              className=\"w-full bg-gradient-to-r from-green-500 to-emerald-500 hover:from-green-600 hover:to-emerald-600 text-white font-semibold\"\n            >\n              {betAccountQuery.place_bet.isPending ? 'Flipping Coin...' : '🎲 Flip the Coin!'}\n            </Button>\n            \n            {/* Bet Result */}\n            {betResult === 'won' && (\n              <div className=\"text-center p-3 bg-green-50 rounded-lg border border-green-200\">\n                <p className=\"text-green-600 font-semibold\">🎉 You won the bet!</p>\n              </div>\n            )}\n            {betResult === 'lost' && (\n              <div className=\"text-center p-3 bg-red-50 rounded-lg border border-red-200\">\n                <p className=\"text-red-600 font-semibold\">😢 You lost the bet!</p>\n              </div>\n            )}\n            {betResult === 'pending' && (\n              <div className=\"text-center p-3 bg-yellow-50 rounded-lg border border-yellow-200\">\n                <p className=\"text-yellow-600 font-medium\">⏳ Processing your bet...</p>\n              </div>\n            )}\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  )\n}\n\nexport default function CoinFlip() {\n  return (\n    <div className=\"max-w-7xl mx-auto px-4 py-8 space-y-6\">\n      <CoinFlipCreate />\n      <CoinFlipList />\n    </div>\n  )\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1316, "column": 0}, "map": {"version":3,"sources":["file:///home/joe/bootcamp-temp/coin-flip-frontend/src/app/page.tsx"],"sourcesContent":["import { WalletButton } from '@/components/wallet/WalletButton'\nimport CoinFlip from '@/components/coin-flip/coin-flip-ui'\n\nexport default function Home() {\n  return (\n    <main className=\"min-h-screen bg-gray-100\">\n      <WalletButton />\n      <div className=\"container mx-auto py-8\">\n        <CoinFlip />\n      </div>\n    </main>\n  )\n}"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEe,SAAS;IACtB,qBACE,8OAAC;QAAK,WAAU;;0BACd,8OAAC,4IAAA,CAAA,eAAY;;;;;0BACb,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,wJAAA,CAAA,UAAQ;;;;;;;;;;;;;;;;AAIjB","debugId":null}}]
}