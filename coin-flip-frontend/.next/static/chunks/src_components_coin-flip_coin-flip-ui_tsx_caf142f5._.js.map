{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/joe/bootcamp-temp/coin-flip-frontend/src/components/coin-flip/coin-flip-ui.tsx"],"sourcesContent":["'use client'\n\nimport { PublicKey } from '@solana/web3.js'\nimport { useMemo, useState, useEffect } from 'react'\nimport { useCoinFlipProgram, useCoinFlipProgramAccount } from './coin-flip-data-access'\nimport { Button } from '@/components/ui/button'\nimport { useWallet } from '@solana/wallet-adapter-react'\nimport { Coins, Trophy, Target, TrendingUp, Users, History, Zap, Clock, ArrowUp, ArrowDown } from 'lucide-react'\nimport BN from 'bn.js'\nimport { useQuery } from '@tanstack/react-query'\nimport { useConnection } from '@solana/wallet-adapter-react'\nimport CoinFlipAnimation from './CoinFlipAnimation'\n\nconst LAMPORTS_PER_SOL = 1_000_000_000\n\n// Helper function to format wallet address\nfunction formatWalletAddress(address: string, chars = 4) {\n  return `${address.slice(0, chars)}...${address.slice(-chars)}`\n}\n\n// Helper function to get time ago\nfunction getTimeAgo(timestamp: number) {\n  const now = Date.now()\n  const diff = now - timestamp\n  const minutes = Math.floor(diff / (1000 * 60))\n  const hours = Math.floor(diff / (1000 * 60 * 60))\n  const days = Math.floor(diff / (1000 * 60 * 60 * 24))\n  \n  if (days > 0) return `${days}d ago`\n  if (hours > 0) return `${hours}h ago`\n  if (minutes > 0) return `${minutes}m ago`\n  return 'Just now'\n}\n\n// Component to fetch and display top winners with real data\nfunction TopWinnersToday() {\n  const { connection } = useConnection()\n  const { program } = useCoinFlipProgram()\n  \n  const topWinners = useQuery({\n    queryKey: ['top-winners-recent'],\n    queryFn: async () => {\n      if (!program) return []\n      \n      try {\n        // Fetch all bet accounts\n        const betAccounts = await (program.account as any).betAccount.all()\n        \n        // Since we don't have timestamps, we'll show recent winners based on account data\n        // Filter for settled, winning bets\n        const winningBets = betAccounts\n          .filter((bet: any) => {\n            // Only settled, winning bets\n            return bet.account.settled && bet.account.won\n          })\n          .map((bet: any) => ({\n            user: bet.account.user.toString(),\n            amount: bet.account.amount.toNumber() / LAMPORTS_PER_SOL,\n            choice: bet.account.choice,\n            gameNumber: bet.account.gameNumber?.toNumber() || 0\n          }))\n        \n        // Sort by game number (more recent games first) and take recent winners\n        const recentWinningBets = winningBets\n          .sort((a: { gameNumber: number }, b: { gameNumber: number }) => b.gameNumber - a.gameNumber)\n          .slice(0, 20) // Take last 20 winning bets to calculate recent winners\n        \n        // Group by user and sum their recent winnings\n        const userWinnings = recentWinningBets.reduce((acc: any, bet: any) => {\n          const userKey = bet.user\n          if (!acc[userKey]) {\n            acc[userKey] = {\n              user: userKey,\n              totalWinnings: 0,\n              gamesWon: 0,\n              lastGameNumber: 0\n            }\n          }\n          acc[userKey].totalWinnings += bet.amount\n          acc[userKey].gamesWon += 1\n          acc[userKey].lastGameNumber = Math.max(acc[userKey].lastGameNumber, bet.gameNumber)\n          return acc\n        }, {})\n        \n        // Convert to array and sort by total winnings, then by recency\n        const sortedWinners = Object.values(userWinnings)\n          .sort((a: any, b: any) => {\n            // First sort by total winnings\n            if (b.totalWinnings !== a.totalWinnings) {\n              return b.totalWinnings - a.totalWinnings\n            }\n            // If winnings are equal, sort by most recent game\n            return b.lastGameNumber - a.lastGameNumber\n          })\n          .slice(0, 4) // Top 4 winners\n          .map((winner: any, index: number) => ({\n            rank: index + 1,\n            player: formatWalletAddress(winner.user),\n            winnings: winner.totalWinnings,\n            gamesWon: winner.gamesWon\n          }))\n        \n        return sortedWinners\n      } catch (error) {\n        console.error('Error fetching top winners:', error)\n        return []\n      }\n    },\n    enabled: !!program,\n    refetchInterval: 30000, // Refetch every 30 seconds\n  })\n\n  if (topWinners.isLoading) {\n    return (\n      <div className=\"bg-white rounded-2xl p-6 shadow-lg border border-gray-100\">\n        <h3 className=\"text-lg font-semibold mb-4 flex items-center gap-2 text-gray-800\">\n          <Trophy className=\"w-5 h-5 text-yellow-600\" />\n          Recent Top Winners\n        </h3>\n        <div className=\"space-y-3\">\n          {[...Array(4)].map((_, i) => (\n            <div key={i} className=\"animate-pulse\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center gap-3\">\n                  <div className=\"w-6 h-6 bg-gray-300 rounded-full\"></div>\n                  <div className=\"h-4 bg-gray-300 rounded w-20\"></div>\n                </div>\n                <div className=\"h-4 bg-gray-300 rounded w-16\"></div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"bg-white rounded-2xl p-6 shadow-lg border border-gray-100\">\n      <h3 className=\"text-lg font-semibold mb-4 flex items-center gap-2 text-gray-800\">\n        <Trophy className=\"w-5 h-5 text-yellow-600\" />\n        Recent Top Winners\n      </h3>\n      \n      {!topWinners.data || topWinners.data.length === 0 ? (\n        <div className=\"text-center py-6 text-gray-500\">\n          <Trophy className=\"w-8 h-8 mx-auto mb-2 text-gray-400\" />\n          <p className=\"text-sm\">No recent winners</p>\n        </div>\n      ) : (\n        <div className=\"space-y-3\">\n          {topWinners.data.map((winner: any) => (\n            <div key={winner.rank} className=\"flex items-center justify-between\">\n              <div className=\"flex items-center gap-3\">\n                <div className={`w-6 h-6 rounded-full flex items-center justify-center text-xs font-bold text-white ${\n                  winner.rank === 1 ? 'bg-yellow-500' : \n                  winner.rank === 2 ? 'bg-gray-400' : \n                  winner.rank === 3 ? 'bg-orange-500' : 'bg-gray-600'\n                }`}>\n                  {winner.rank}\n                </div>\n                <div>\n                  <span className=\"text-sm font-medium text-gray-900\">{winner.player}</span>\n                  <div className=\"text-xs text-gray-500\">{winner.gamesWon} wins</div>\n                </div>\n              </div>\n              <span className=\"text-sm font-semibold text-green-600\">\n                +{winner.winnings.toFixed(2)} SOL\n              </span>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  )\n}\n\n// Component to fetch and display recent activity\nfunction RecentActivityList() {\n  const { connection } = useConnection()\n  const { program } = useCoinFlipProgram()\n  \n  const recentBets = useQuery({\n    queryKey: ['recent-bets'],\n    queryFn: async () => {\n      if (!program) return []\n      \n      try {\n        // Fetch all bet accounts\n        const betAccounts = await (program.account as any).betAccount.all()\n        \n        // Sort by most recent and take last 10\n        const sortedBets = betAccounts\n          .filter((bet: any) => bet.account.settled) // Only show settled bets\n          .sort((a: any, b: any) => {\n            // Sort by slot number if available, otherwise by account creation\n            return b.account.slot || 0 - (a.account.slot || 0)\n          })\n          .slice(0, 8)\n          .map((bet: any) => ({\n            id: bet.publicKey.toString(),\n            player: formatWalletAddress(bet.account.user.toString()),\n            amount: bet.account.amount.toNumber() / LAMPORTS_PER_SOL,\n            choice: bet.account.choice === 0 ? 'Heads' : 'Tails',\n            won: bet.account.won,\n            timestamp: Date.now() - Math.random() * 3600000 // Mock timestamp for now\n          }))\n        \n        return sortedBets\n      } catch (error) {\n        console.error('Error fetching recent bets:', error)\n        return []\n      }\n    },\n    enabled: !!program,\n    refetchInterval: 30000, // Refetch every 30 seconds\n  })\n\n  if (recentBets.isLoading) {\n    return (\n      <div className=\"space-y-3\">\n        {[...Array(4)].map((_, i) => (\n          <div key={i} className=\"animate-pulse\">\n            <div className=\"flex items-center justify-between py-2\">\n              <div className=\"flex items-center gap-2\">\n                <div className=\"w-2 h-2 bg-gray-300 rounded-full\"></div>\n                <div>\n                  <div className=\"h-4 bg-gray-300 rounded w-20 mb-1\"></div>\n                  <div className=\"h-3 bg-gray-300 rounded w-16\"></div>\n                </div>\n              </div>\n              <div className=\"h-4 bg-gray-300 rounded w-12\"></div>\n            </div>\n          </div>\n        ))}\n      </div>\n    )\n  }\n\n  if (!recentBets.data || recentBets.data.length === 0) {\n    return (\n      <div className=\"text-center py-6 text-gray-500\">\n        <Clock className=\"w-8 h-8 mx-auto mb-2 text-gray-400\" />\n        <p className=\"text-sm\">No recent activity</p>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"space-y-3\">\n      {recentBets.data.map((game: any) => (\n        <div key={game.id} className=\"flex items-center justify-between py-2 border-b border-gray-100 last:border-b-0\">\n          <div className=\"flex items-center gap-2\">\n            <div className={`w-2 h-2 rounded-full ${game.won ? 'bg-green-400' : 'bg-red-400'}`}></div>\n            <div>\n              <p className=\"text-sm font-medium text-gray-900\">{game.player}</p>\n              <p className=\"text-xs text-gray-500\">{game.choice} • {getTimeAgo(game.timestamp)}</p>\n            </div>\n          </div>\n          <div className=\"text-right\">\n            <p className={`text-sm font-semibold ${game.won ? 'text-green-600' : 'text-red-600'}`}>\n              {game.won ? '+' : '-'}{game.amount.toFixed(2)} SOL\n            </p>\n          </div>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nfunction GameSelector() {\n  const { accounts } = useCoinFlipProgram()\n  const [selectedGame, setSelectedGame] = useState<PublicKey | null>(null)\n\n  const availableGames = useMemo(() => {\n    return accounts.data?.filter((account: any) => \n      account.account.totalAmount.toNumber() > 0\n    ) || []\n  }, [accounts.data])\n\n  useEffect(() => {\n    if (availableGames.length > 0 && !selectedGame) {\n      setSelectedGame(availableGames[0].publicKey)\n    }\n  }, [availableGames, selectedGame])\n\n  if (availableGames.length === 0) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center py-12 bg-white rounded-xl shadow-lg max-w-md mx-auto\">\n          <Coins className=\"h-16 w-16 text-gray-400 mx-auto mb-4\" />\n          <h3 className=\"text-xl font-semibold text-gray-700 mb-2\">No Games Available</h3>\n          <p className=\"text-gray-500\">No active games found. Contact an admin to start a game.</p>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <div className=\"max-w-7xl mx-auto px-4 py-8\">\n        <div className=\"grid grid-cols-12 gap-8\">\n          {/* Left Sidebar - Stats & Info */}\n          <div className=\"col-span-12 lg:col-span-3 space-y-6\">\n            {/* Game Stats */}\n            <div className=\"bg-white rounded-2xl p-6 shadow-lg border border-gray-100\">\n              <h3 className=\"text-lg font-semibold mb-4 flex items-center gap-2 text-gray-800\">\n                <TrendingUp className=\"w-5 h-5 text-blue-600\" />\n                Game Statistics\n              </h3>\n              <div className=\"space-y-4\">\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-gray-600\">Total Games</span>\n                  <span className=\"font-semibold text-gray-900\">\n                    {availableGames[0]?.account.totalGames.toString() || '0'}\n                  </span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-gray-600\">Vault Balance</span>\n                  <span className=\"font-semibold text-green-600\">\n                    {((availableGames[0]?.account.totalAmount.toNumber() || 0) / LAMPORTS_PER_SOL).toFixed(2)} SOL\n                  </span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-gray-600\">House Fee</span>\n                  <span className=\"font-semibold text-purple-600\">\n                    {availableGames[0]?.account.feePercentage.toString() || '5'}%\n                  </span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-gray-600\">Win Rate</span>\n                  <span className=\"font-semibold text-orange-600\">50%</span>\n                </div>\n              </div>\n            </div>\n\n            {/* How to Play */}\n            <div className=\"bg-white rounded-2xl p-6 shadow-lg border border-gray-100\">\n              <h3 className=\"text-lg font-semibold mb-4 text-gray-800\">How to Play</h3>\n              <div className=\"space-y-3\">\n                <div className=\"flex items-start gap-3\">\n                  <div className=\"w-6 h-6 bg-blue-500 rounded-full flex items-center justify-center text-xs font-bold text-white mt-0.5\">1</div>\n                  <p className=\"text-sm text-gray-600\">Choose your bet amount in SOL</p>\n                </div>\n                <div className=\"flex items-start gap-3\">\n                  <div className=\"w-6 h-6 bg-blue-500 rounded-full flex items-center justify-center text-xs font-bold text-white mt-0.5\">2</div>\n                  <p className=\"text-sm text-gray-600\">Pick Heads (🪙) or Tails (🎯)</p>\n                </div>\n                <div className=\"flex items-start gap-3\">\n                  <div className=\"w-6 h-6 bg-blue-500 rounded-full flex items-center justify-center text-xs font-bold text-white mt-0.5\">3</div>\n                  <p className=\"text-sm text-gray-600\">Win 2x your bet minus house fee</p>\n                </div>\n              </div>\n              \n              <div className=\"mt-4 p-3 bg-yellow-50 border border-yellow-200 rounded-lg\">\n                <p className=\"text-xs text-yellow-800\">\n                  <strong>Tip:</strong> Start with smaller bets to get familiar with the game!\n                </p>\n              </div>\n            </div>\n\n            {/* Top Winners - Now using real data */}\n            <TopWinnersToday />\n          </div>\n\n          {/* Main Game Area */}\n          <div className=\"col-span-12 lg:col-span-6\">\n            {/* Game Selection */}\n            {availableGames.length > 1 && (\n              <div className=\"bg-white rounded-2xl p-6 shadow-lg border border-gray-100 mb-6\">\n                <h3 className=\"text-lg font-semibold mb-4 text-gray-800\">Select a Game</h3>\n                <div className=\"grid gap-3\">\n                  {availableGames.map((game: any) => (\n                    <button\n                      key={game.publicKey.toString()}\n                      onClick={() => setSelectedGame(game.publicKey)}\n                      className={`p-4 rounded-xl border-2 transition-all text-left ${\n                        selectedGame?.equals(game.publicKey)\n                          ? 'border-blue-500 bg-blue-50'\n                          : 'border-gray-200 hover:border-gray-300 hover:bg-gray-50'\n                      }`}\n                    >\n                      <div className=\"flex justify-between items-center\">\n                        <div>\n                          <p className=\"font-medium text-gray-900\">Game #{game.account.totalGames.toString()}</p>\n                          <p className=\"text-sm text-gray-600\">\n                            Vault: {(game.account.totalAmount.toNumber() / LAMPORTS_PER_SOL).toFixed(4)} SOL\n                          </p>\n                        </div>\n                        <div className=\"text-sm text-gray-500\">\n                          Fee: {game.account.feePercentage.toString()}%\n                        </div>\n                      </div>\n                    </button>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            {selectedGame && (\n              <BettingInterface gameStatePubkey={selectedGame} />\n            )}\n          </div>\n\n          {/* Right Sidebar - Activity & Tips */}\n          <div className=\"col-span-12 lg:col-span-3 space-y-6\">\n            {/* Recent Activity */}\n            <div className=\"space-y-4\">\n              <h3 className=\"text-lg font-semibold flex items-center gap-2 text-gray-800\">\n                <History className=\"w-5 h-5 text-green-600\" />\n                Recent Activity\n              </h3>\n              <RecentActivityList />\n            </div>\n\n            {/* Game Tips */}\n            <div className=\"bg-gradient-to-br from-green-50 to-emerald-50 rounded-2xl p-6 shadow-lg border border-gray-100\">\n              <h3 className=\"text-lg font-semibold mb-3 text-gray-800\">💡 Pro Tips</h3>\n              <ul className=\"space-y-2 text-sm text-gray-600\">\n                <li>• Set a budget and stick to it</li>\n                <li>• Each flip is independent (50/50)</li>\n                <li>• Consider the house fee in your strategy</li>\n                <li>• Take breaks between sessions</li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction BettingInterface({ gameStatePubkey }: { gameStatePubkey: PublicKey }) {\n  const wallet = useWallet()\n  const { accounts, program } = useCoinFlipProgram()\n  \n  const [betChoice, setBetChoice] = useState<number>(0)\n  const [placeBetAmount, setPlaceBetAmount] = useState<number>(0)\n  const [betResult, setBetResult] = useState<null | 'won' | 'lost' | 'pending'>(null)\n  const [showAnimation, setShowAnimation] = useState(false)\n  const [animationResult, setAnimationResult] = useState<'heads' | 'tails' | null>(null)\n\n  const gameStateData = useMemo(() => {\n    return accounts.data?.find((account: any) => account.publicKey.equals(gameStatePubkey))\n  }, [accounts.data, gameStatePubkey])\n\n  const betAccountQuery = useCoinFlipProgramAccount({\n    user: wallet.publicKey || new PublicKey('11111111111111111111111111111111'),\n    owner: gameStateData?.account?.owner || new PublicKey('11111111111111111111111111111111'),\n    gameNumber: gameStateData?.account?.totalGames?.toNumber()\n  })\n\n  const potentialWinnings = useMemo(() => {\n    if (!placeBetAmount || !gameStateData?.account) return 0\n    const payout = placeBetAmount * 2\n    const fee = (payout * gameStateData.account.feePercentage.toNumber()) / 100\n    return payout - fee\n  }, [placeBetAmount, gameStateData?.account])\n\n  const existingBetInfo = useMemo(() => {\n    const betData = betAccountQuery.accountQuery.data\n    if (!betData?.settled) return null\n    \n    return {\n      amount: betData.amount.toNumber() / LAMPORTS_PER_SOL,\n      choice: betData.choice === 0 ? 'Heads' : 'Tails',\n      won: betData.won\n    }\n  }, [betAccountQuery.accountQuery.data])\n\n  useEffect(() => {\n    if (betAccountQuery.placeBet.isPending) {\n      setBetResult('pending')\n    }\n  }, [betAccountQuery.placeBet.isPending])\n\n const checkBetResult = async (gameNumber: number) => {\n  if (!wallet.publicKey) return\n\n  const gameNumberBuf = new BN(gameNumber).toArrayLike(Buffer, 'le', 8)\n  const [correctBetAccount] = PublicKey.findProgramAddressSync(\n    [Buffer.from('bet_account'), wallet.publicKey.toBuffer(), gameNumberBuf],\n    (program as any).programId\n  )\n\n  let attempts = 0\n  const maxAttempts = 10\n\n  const attemptFetch = async () => {\n    attempts++\n    \n    try {\n      const betData = await (program.account as any).betAccount.fetch(correctBetAccount)\n      \n      if (betData?.settled) {\n        // Determine the actual coin result (opposite of user choice if they lost)\n        const coinResult = betData.won \n          ? (betChoice === 0 ? 'heads' : 'tails')\n          : (betChoice === 0 ? 'tails' : 'heads')\n        \n        setAnimationResult(coinResult)\n        setBetResult(betData.won ? 'won' : 'lost')\n        setPlaceBetAmount(0)\n        accounts.refetch()\n        \n        // Hide animation after showing result\n        setTimeout(() => {\n          setShowAnimation(false)\n        }, 3000)\n        return\n      }\n      \n      if (attempts < maxAttempts) {\n        setTimeout(attemptFetch, 2000)\n      } else {\n        setBetResult(null)\n        setPlaceBetAmount(0)\n        setShowAnimation(false)\n      }\n    } catch (error) {\n      if (attempts < maxAttempts) {\n        setTimeout(attemptFetch, 2000)\n      } else {\n        setBetResult(null)\n        setPlaceBetAmount(0)\n        setShowAnimation(false)\n      }\n    }\n  }\n\n  setTimeout(attemptFetch, 3000)\n}\n\nconst handlePlaceBet = async () => {\n  if (!wallet.publicKey || !gameStateData?.account?.owner || !placeBetAmount || placeBetAmount <= 0) {\n    return\n  }\n\n  // Start animation\n  setShowAnimation(true)\n  setAnimationResult(null)\n  setBetResult('pending')\n  \n  const amountLamports = placeBetAmount * LAMPORTS_PER_SOL\n\n  try {\n    const gameNumberForBet = betAccountQuery.currentGameNumber\n    \n    await betAccountQuery.placeBet.mutateAsync({\n      amount: amountLamports,\n      choice: betChoice\n    })\n    \n    checkBetResult(gameNumberForBet)\n  } catch (error) {\n    console.error(\"Bet failed:\", error)\n    setBetResult(null)\n    setShowAnimation(false)\n  }\n}\n\n  if (!gameStateData?.account) {\n    return <div className=\"text-center py-8 bg-white rounded-2xl shadow-lg\">Loading game...</div>\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Previous Bet Result */}\n      {existingBetInfo && (\n        <div className={`text-center p-6 rounded-2xl shadow-lg ${\n          existingBetInfo.won \n            ? 'bg-green-50 border-2 border-green-200' \n            : 'bg-red-50 border-2 border-red-200'\n        }`}>\n          <div className=\"text-4xl mb-2\">\n            {existingBetInfo.won ? '🎉' : '😢'}\n          </div>\n          <h3 className=\"text-xl font-bold mb-2 text-gray-800\">\n            {existingBetInfo.won ? 'You Won!' : 'You Lost!'}\n          </h3>\n          <p className=\"text-gray-700\">\n            You bet {existingBetInfo.amount.toFixed(4)} SOL on {existingBetInfo.choice}\n          </p>\n        </div>\n      )}\n\n      {/* Main Game Interface */}\n      <div className=\"bg-white rounded-2xl shadow-lg border border-gray-100 overflow-hidden\">\n        {/* Game Header */}\n        <div className=\"bg-gradient-to-r from-blue-50 to-purple-50 p-8 text-center border-b\">\n          <h1 className=\"text-4xl font-bold text-gray-900 mb-2\">🪙 Coin Flip Game</h1>\n          <p className=\"text-gray-600\">Double your SOL or lose it all!</p>\n        </div>\n\n        {/* Betting Interface */}\n        <div className=\"p-8\">\n          <div className=\"max-w-md mx-auto space-y-6\">\n            {/* Bet Amount */}\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n                Bet Amount\n              </label>\n              <div className=\"flex items-center gap-3\">\n                <input\n                  type=\"number\"\n                  min={0}\n                  step={0.1}\n                  placeholder=\"0.0\"\n                  value={placeBetAmount || ''}\n                  onChange={(e) => setPlaceBetAmount(Number(e.target.value))}\n                  disabled={betAccountQuery.placeBet.isPending}\n                  className=\"flex-1 px-4 py-3 border border-gray-300 rounded-lg text-lg font-semibold text-center focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                />\n                <span className=\"text-lg font-medium text-gray-600\">SOL</span>\n              </div>\n              \n              {/* Quick Amount Buttons */}\n              <div className=\"flex gap-2 mt-3\">\n                {[0.1, 0.5, 1.0].map(amount => (\n                  <button\n                    key={amount}\n                    onClick={() => setPlaceBetAmount(amount)}\n                    disabled={betAccountQuery.placeBet.isPending}\n                    className=\"flex-1 py-2 text-sm bg-gray-100 hover:bg-gray-200 rounded-lg transition-colors\"\n                  >\n                    {amount} SOL\n                  </button>\n                ))}\n              </div>\n            </div>\n\n            {/* Potential Winnings */}\n            {placeBetAmount > 0 && (\n              <div className=\"bg-yellow-50 border-2 border-yellow-200 rounded-xl p-4 text-center\">\n                <p className=\"text-lg font-semibold text-yellow-800\">\n                  Potential Winnings: {potentialWinnings.toFixed(4)} SOL\n                </p>\n                <p className=\"text-sm text-yellow-700\">\n                  2x your bet minus {gameStateData.account.feePercentage.toString()}% house fee\n                </p>\n              </div>\n            )}\n\n            {/* Choice Selection */}\n            <div className=\"space-y-3\">\n              <label className=\"block text-sm font-medium text-gray-700 text-center\">\n                Choose Your Side\n              </label>\n              <div className=\"grid grid-cols-2 gap-4\">\n                <button\n                  onClick={() => setBetChoice(0)}\n                  disabled={betAccountQuery.placeBet.isPending}\n                  className={`p-6 rounded-xl border-2 transition-all ${\n                    betChoice === 0\n                      ? 'border-orange-500 bg-orange-50 text-orange-700'\n                      : 'border-gray-200 hover:border-gray-300 text-gray-700'\n                  }`}\n                >\n                  <div className=\"text-4xl mb-2\">🪙</div>\n                  <div className=\"font-semibold\">Heads</div>\n                </button>\n                \n                <button\n                  onClick={() => setBetChoice(1)}\n                  disabled={betAccountQuery.placeBet.isPending}\n                  className={`p-6 rounded-xl border-2 transition-all ${\n                    betChoice === 1\n                      ? 'border-blue-500 bg-blue-50 text-blue-700'\n                      : 'border-gray-200 hover:border-gray-300 text-gray-700'\n                  }`}\n                >\n                  <div className=\"text-4xl mb-2\">🎯</div>\n                  <div className=\"font-semibold\">Tails</div>\n                </button>\n              </div>\n            </div>\n\n            {/* Place Bet Button */}\n            <Button\n              onClick={handlePlaceBet}\n              disabled={betAccountQuery.placeBet.isPending || !placeBetAmount || placeBetAmount <= 0 || !wallet.publicKey}\n              className=\"w-full py-4 text-lg font-bold bg-gradient-to-r from-green-500 to-emerald-500 hover:from-green-600 hover:to-emerald-600\"\n            >\n              {betAccountQuery.placeBet.isPending ? (\n                <span className=\"flex items-center gap-2\">\n                  <div className=\"animate-spin h-5 w-5 border-2 border-white border-t-transparent rounded-full\"></div>\n                  Flipping Coin...\n                </span>\n              ) : (\n                '🎲 Flip the Coin!'\n              )}\n            </Button>\n\n            {/* Bet Status */}\n            {betResult === 'won' && (\n              <div className=\"text-center p-4 bg-green-50 rounded-xl border-2 border-green-200\">\n                <div className=\"text-3xl mb-2\">🎉</div>\n                <p className=\"text-green-600 font-bold text-lg\">You Won!</p>\n              </div>\n            )}\n            {betResult === 'lost' && (\n              <div className=\"text-center p-4 bg-red-50 rounded-xl border-2 border-red-200\">\n                <div className=\"text-3xl mb-2\">😢</div>\n                <p className=\"text-red-600 font-bold text-lg\">You Lost!</p>\n              </div>\n            )}\n            {betResult === 'pending' && (\n              <div className=\"text-center p-4 bg-blue-50 rounded-xl border-2 border-blue-200\">\n                <div className=\"text-3xl mb-2\">⏳</div>\n                <p className=\"text-blue-600 font-semibold\">Processing your bet...</p>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default function CoinFlipGame() {\n  const wallet = useWallet()\n\n  if (!wallet.publicKey) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center max-w-md mx-auto p-8\">\n          <Coins className=\"h-20 w-20 text-gray-400 mx-auto mb-6\" />\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-4\">Coin Flip Game</h1>\n          <p className=\"text-gray-600 mb-6\">Connect your wallet to start playing!</p>\n        </div>\n      </div>\n    )\n  }\n\n  return <GameSelector />\n}"],"names":[],"mappings":"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","debugId":null}}]
}