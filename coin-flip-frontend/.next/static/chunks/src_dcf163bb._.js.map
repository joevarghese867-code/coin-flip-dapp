{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/joe/bootcamp-temp/coin-flip-frontend/src/lib/utils.ts"],"sourcesContent":["import { clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: (string | undefined)[]) {\n  return twMerge(clsx(inputs))\n}\n\nexport function ellipsify(str = '', len = 4) {\n  if (str.length > 30) {\n    return str.substring(0, len) + '..' + str.substring(str.length - len, str.length)\n  }\n  return str\n}"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,SAAS;IAAG,IAAA,IAAA,OAAA,UAAA,QAAA,AAAG,SAAH,UAAA,OAAA,OAAA,GAAA,OAAA,MAAA;QAAG,OAAH,QAAA,SAAA,CAAA,KAAiC;;IAClD,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB;AAEO,SAAS;QAAU,MAAA,iEAAM,IAAI,MAAA,iEAAM;IACxC,IAAI,IAAI,MAAM,GAAG,IAAI;QACnB,OAAO,IAAI,SAAS,CAAC,GAAG,OAAO,OAAO,IAAI,SAAS,CAAC,IAAI,MAAM,GAAG,KAAK,IAAI,MAAM;IAClF;IACA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":["file:///home/joe/bootcamp-temp/coin-flip-frontend/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,KASb;QATa,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF,GATa;IAUd,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 101, "column": 0}, "map": {"version":3,"sources":["file:///home/joe/bootcamp-temp/coin-flip-frontend/src/components/cluster/cluster-data-access.tsx"],"sourcesContent":["'use client'\nimport { createContext, ReactNode, useContext } from 'react'\n\nconst ClusterContext = createContext<{\n  cluster: { network: string; endpoint: string }\n}>({\n  cluster: { network: 'devnet', endpoint: 'https://api.devnet.solana.com' }\n})\n\nexport function ClusterProvider({ children }: { children: ReactNode }) {\n  const cluster = { network: 'devnet', endpoint: 'https://api.devnet.solana.com' }\n\n  return (\n    <ClusterContext.Provider value={{ cluster }}>\n      {children}\n    </ClusterContext.Provider>\n  )\n}\n\nexport function useCluster() {\n  return useContext(ClusterContext)\n}\n"],"names":[],"mappings":";;;;;AACA;;;AADA;;AAGA,MAAM,+BAAiB,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAEhC;IACD,SAAS;QAAE,SAAS;QAAU,UAAU;IAAgC;AAC1E;AAEO,SAAS,gBAAgB,KAAqC;QAArC,EAAE,QAAQ,EAA2B,GAArC;IAC9B,MAAM,UAAU;QAAE,SAAS;QAAU,UAAU;IAAgC;IAE/E,qBACE,6LAAC,eAAe,QAAQ;QAAC,OAAO;YAAE;QAAQ;kBACvC;;;;;;AAGP;KARgB;AAUT,SAAS;;IACd,OAAO,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;AACpB;GAFgB","debugId":null}},
    {"offset": {"line": 151, "column": 0}, "map": {"version":3,"sources":["file:///home/joe/bootcamp-temp/coin-flip-frontend/src/components/solana/solana-provider.tsx"],"sourcesContent":["'use client'\nimport { AnchorProvider } from '@coral-xyz/anchor'\nimport { useConnection, useWallet } from '@solana/wallet-adapter-react'\nimport { useMemo } from 'react'\n\nexport function useAnchorProvider() {\n  const { connection } = useConnection()\n  const wallet = useWallet()\n\n  return useMemo(() => {\n    return new AnchorProvider(connection, wallet as any, {\n      commitment: 'confirmed',\n    })\n  }, [connection, wallet])\n}"],"names":[],"mappings":";;;AACA;AAAA;AACA;AAAA;AACA;;AAHA;;;;AAKO,SAAS;;IACd,MAAM,EAAE,UAAU,EAAE,GAAG,CAAA,GAAA,wLAAA,CAAA,gBAAa,AAAD;IACnC,MAAM,SAAS,CAAA,GAAA,oLAAA,CAAA,YAAS,AAAD;IAEvB,OAAO,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD;qCAAE;YACb,OAAO,IAAI,uLAAA,CAAA,iBAAc,CAAC,YAAY,QAAe;gBACnD,YAAY;YACd;QACF;oCAAG;QAAC;QAAY;KAAO;AACzB;GATgB;;QACS,wLAAA,CAAA,gBAAa;QACrB,oLAAA,CAAA,YAAS","debugId":null}},
    {"offset": {"line": 194, "column": 0}, "map": {"version":3,"sources":["file:///home/joe/bootcamp-temp/coin-flip-frontend/src/components/use-transaction-toast.tsx"],"sourcesContent":["'use client'\nimport { toast } from 'sonner'\n\nexport function useTransactionToast() {\n  return (signature: string) => {\n    toast.success('Transaction sent!', {\n      description: `Signature: ${signature.slice(0, 8)}...`,\n      action: {\n        label: 'View',\n        onClick: () => window.open(`https://explorer.solana.com/tx/${signature}?cluster=localnet`, '_blank')\n      }\n    })\n  }\n}"],"names":[],"mappings":";;;AACA;AADA;;AAGO,SAAS;IACd,OAAO,CAAC;QACN,2IAAA,CAAA,QAAK,CAAC,OAAO,CAAC,qBAAqB;YACjC,aAAa,AAAC,cAAmC,OAAtB,UAAU,KAAK,CAAC,GAAG,IAAG;YACjD,QAAQ;gBACN,OAAO;gBACP,SAAS,IAAM,OAAO,IAAI,CAAC,AAAC,kCAA2C,OAAV,WAAU,sBAAoB;YAC7F;QACF;IACF;AACF","debugId":null}},
    {"offset": {"line": 220, "column": 0}, "map": {"version":3,"sources":["file:///home/joe/bootcamp-temp/coin-flip-frontend/src/lib/idl.ts"],"sourcesContent":["// src/lib/idl.ts\n\nexport const IDL ={\n  \n  \"address\": \"CK9rjq6oyLK8uJBkzkg3CBPW4ydBdKM5khQQUigFuqng\",\n  \"metadata\": {\n    \"name\": \"coin_flip_backend\",\n    \"version\": \"0.1.0\",\n    \"spec\": \"0.1.0\",\n    \"description\": \"Created with Anchor\"\n  },\n  \"instructions\": [\n    {\n      \"name\": \"deposit\",\n      \"discriminator\": [\n        242,\n        35,\n        198,\n        137,\n        82,\n        225,\n        242,\n        182\n      ],\n      \"accounts\": [\n        {\n          \"name\": \"authority\",\n          \"writable\": true,\n          \"signer\": true,\n          \"relations\": [\n            \"game_state\"\n          ]\n        },\n        {\n          \"name\": \"game_state\",\n          \"writable\": true,\n          \"pda\": {\n            \"seeds\": [\n              {\n                \"kind\": \"const\",\n                \"value\": [\n                  103,\n                  108,\n                  111,\n                  98,\n                  97,\n                  108,\n                  95,\n                  103,\n                  97,\n                  109,\n                  101,\n                  115,\n                  116,\n                  97,\n                  116,\n                  101\n                ]\n              }\n            ]\n          }\n        },\n        {\n          \"name\": \"system_program\",\n          \"address\": \"11111111111111111111111111111111\"\n        }\n      ],\n      \"args\": [\n        {\n          \"name\": \"amount\",\n          \"type\": \"u64\"\n        }\n      ]\n    },\n    {\n      \"name\": \"initialize\",\n      \"discriminator\": [\n        175,\n        175,\n        109,\n        31,\n        13,\n        152,\n        155,\n        237\n      ],\n      \"accounts\": [\n        {\n          \"name\": \"authority\",\n          \"writable\": true,\n          \"signer\": true\n        },\n        {\n          \"name\": \"game_state\",\n          \"writable\": true,\n          \"pda\": {\n            \"seeds\": [\n              {\n                \"kind\": \"const\",\n                \"value\": [\n                  103,\n                  108,\n                  111,\n                  98,\n                  97,\n                  108,\n                  95,\n                  103,\n                  97,\n                  109,\n                  101,\n                  115,\n                  116,\n                  97,\n                  116,\n                  101\n                ]\n              }\n            ]\n          }\n        },\n        {\n          \"name\": \"system_program\",\n          \"address\": \"11111111111111111111111111111111\"\n        }\n      ],\n      \"args\": [\n        {\n          \"name\": \"fee_percentage\",\n          \"type\": \"u64\"\n        }\n      ]\n    },\n    {\n      \"name\": \"place_bet\",\n      \"discriminator\": [\n        222,\n        62,\n        67,\n        220,\n        63,\n        166,\n        126,\n        33\n      ],\n      \"accounts\": [\n        {\n          \"name\": \"user\",\n          \"writable\": true,\n          \"signer\": true\n        },\n        {\n          \"name\": \"game_state\",\n          \"writable\": true,\n          \"pda\": {\n            \"seeds\": [\n              {\n                \"kind\": \"const\",\n                \"value\": [\n                  103,\n                  108,\n                  111,\n                  98,\n                  97,\n                  108,\n                  95,\n                  103,\n                  97,\n                  109,\n                  101,\n                  115,\n                  116,\n                  97,\n                  116,\n                  101\n                ]\n              }\n            ]\n          }\n        },\n        {\n          \"name\": \"bet_account\",\n          \"writable\": true,\n          \"pda\": {\n            \"seeds\": [\n              {\n                \"kind\": \"const\",\n                \"value\": [\n                  98,\n                  101,\n                  116,\n                  95,\n                  97,\n                  99,\n                  99,\n                  111,\n                  117,\n                  110,\n                  116\n                ]\n              },\n              {\n                \"kind\": \"account\",\n                \"path\": \"user\"\n              },\n              {\n                \"kind\": \"account\",\n                \"path\": \"game_state.total_games\",\n                \"account\": \"GameState\"\n              }\n            ]\n          }\n        },\n        {\n          \"name\": \"system_program\",\n          \"address\": \"11111111111111111111111111111111\"\n        }\n      ],\n      \"args\": [\n        {\n          \"name\": \"amount\",\n          \"type\": \"u64\"\n        },\n        {\n          \"name\": \"choice\",\n          \"type\": \"u8\"\n        }\n      ]\n    },\n    {\n      \"name\": \"withdraw\",\n      \"discriminator\": [\n        183,\n        18,\n        70,\n        156,\n        148,\n        109,\n        161,\n        34\n      ],\n      \"accounts\": [\n        {\n          \"name\": \"authority\",\n          \"writable\": true,\n          \"signer\": true,\n          \"relations\": [\n            \"game_state\"\n          ]\n        },\n        {\n          \"name\": \"game_state\",\n          \"writable\": true,\n          \"pda\": {\n            \"seeds\": [\n              {\n                \"kind\": \"const\",\n                \"value\": [\n                  103,\n                  108,\n                  111,\n                  98,\n                  97,\n                  108,\n                  95,\n                  103,\n                  97,\n                  109,\n                  101,\n                  115,\n                  116,\n                  97,\n                  116,\n                  101\n                ]\n              }\n            ]\n          }\n        },\n        {\n          \"name\": \"system_program\",\n          \"address\": \"11111111111111111111111111111111\"\n        }\n      ],\n      \"args\": [\n        {\n          \"name\": \"amount\",\n          \"type\": \"u64\"\n        }\n      ]\n    }\n  ],\n  \"accounts\": [\n    {\n      \"name\": \"BetAccount\",\n      \"discriminator\": [\n        117,\n        187,\n        165,\n        174,\n        194,\n        28,\n        119,\n        76\n      ]\n    },\n    {\n      \"name\": \"GameState\",\n      \"discriminator\": [\n        144,\n        94,\n        208,\n        172,\n        248,\n        99,\n        134,\n        120\n      ]\n    }\n  ],\n  \"errors\": [\n    {\n      \"code\": 6000,\n      \"name\": \"UnautharisedOwner\",\n      \"msg\": \"Invalid authority\"\n    },\n    {\n      \"code\": 6001,\n      \"name\": \"InvalidChoice\",\n      \"msg\": \"Choice must be 0 or 1\"\n    },\n    {\n      \"code\": 6002,\n      \"name\": \"InvalidAmount\",\n      \"msg\": \"Amount exceeds the total amount in the vault\"\n    }\n  ],\n  \"types\": [\n    {\n      \"name\": \"BetAccount\",\n      \"type\": {\n        \"kind\": \"struct\",\n        \"fields\": [\n          {\n            \"name\": \"user\",\n            \"type\": \"pubkey\"\n          },\n          {\n            \"name\": \"amount\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"choice\",\n            \"type\": \"u8\"\n          },\n          {\n            \"name\": \"won\",\n            \"type\": \"bool\"\n          },\n          {\n            \"name\": \"settled\",\n            \"type\": \"bool\"\n          }\n        ]\n      }\n    },\n    {\n      \"name\": \"GameState\",\n      \"type\": {\n        \"kind\": \"struct\",\n        \"fields\": [\n          {\n            \"name\": \"authority\",\n            \"type\": \"pubkey\"\n          },\n          {\n            \"name\": \"total_amount\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"fee_percentage\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"total_games\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"bump\",\n            \"type\": \"u8\"\n          }\n        ]\n      }\n    }\n  ]\n} as const\n\n// Your program ID from the IDL\nexport const PROGRAM_ID = \"CK9rjq6oyLK8uJBkzkg3CBPW4ydBdKM5khQQUigFuqng\""],"names":[],"mappings":"AAAA,iBAAiB;;;;;AAEV,MAAM,MAAK;IAEhB,WAAW;IACX,YAAY;QACV,QAAQ;QACR,WAAW;QACX,QAAQ;QACR,eAAe;IACjB;IACA,gBAAgB;QACd;YACE,QAAQ;YACR,iBAAiB;gBACf;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;aACD;YACD,YAAY;gBACV;oBACE,QAAQ;oBACR,YAAY;oBACZ,UAAU;oBACV,aAAa;wBACX;qBACD;gBACH;gBACA;oBACE,QAAQ;oBACR,YAAY;oBACZ,OAAO;wBACL,SAAS;4BACP;gCACE,QAAQ;gCACR,SAAS;oCACP;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;iCACD;4BACH;yBACD;oBACH;gBACF;gBACA;oBACE,QAAQ;oBACR,WAAW;gBACb;aACD;YACD,QAAQ;gBACN;oBACE,QAAQ;oBACR,QAAQ;gBACV;aACD;QACH;QACA;YACE,QAAQ;YACR,iBAAiB;gBACf;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;aACD;YACD,YAAY;gBACV;oBACE,QAAQ;oBACR,YAAY;oBACZ,UAAU;gBACZ;gBACA;oBACE,QAAQ;oBACR,YAAY;oBACZ,OAAO;wBACL,SAAS;4BACP;gCACE,QAAQ;gCACR,SAAS;oCACP;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;iCACD;4BACH;yBACD;oBACH;gBACF;gBACA;oBACE,QAAQ;oBACR,WAAW;gBACb;aACD;YACD,QAAQ;gBACN;oBACE,QAAQ;oBACR,QAAQ;gBACV;aACD;QACH;QACA;YACE,QAAQ;YACR,iBAAiB;gBACf;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;aACD;YACD,YAAY;gBACV;oBACE,QAAQ;oBACR,YAAY;oBACZ,UAAU;gBACZ;gBACA;oBACE,QAAQ;oBACR,YAAY;oBACZ,OAAO;wBACL,SAAS;4BACP;gCACE,QAAQ;gCACR,SAAS;oCACP;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;iCACD;4BACH;yBACD;oBACH;gBACF;gBACA;oBACE,QAAQ;oBACR,YAAY;oBACZ,OAAO;wBACL,SAAS;4BACP;gCACE,QAAQ;gCACR,SAAS;oCACP;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;iCACD;4BACH;4BACA;gCACE,QAAQ;gCACR,QAAQ;4BACV;4BACA;gCACE,QAAQ;gCACR,QAAQ;gCACR,WAAW;4BACb;yBACD;oBACH;gBACF;gBACA;oBACE,QAAQ;oBACR,WAAW;gBACb;aACD;YACD,QAAQ;gBACN;oBACE,QAAQ;oBACR,QAAQ;gBACV;gBACA;oBACE,QAAQ;oBACR,QAAQ;gBACV;aACD;QACH;QACA;YACE,QAAQ;YACR,iBAAiB;gBACf;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;aACD;YACD,YAAY;gBACV;oBACE,QAAQ;oBACR,YAAY;oBACZ,UAAU;oBACV,aAAa;wBACX;qBACD;gBACH;gBACA;oBACE,QAAQ;oBACR,YAAY;oBACZ,OAAO;wBACL,SAAS;4BACP;gCACE,QAAQ;gCACR,SAAS;oCACP;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;iCACD;4BACH;yBACD;oBACH;gBACF;gBACA;oBACE,QAAQ;oBACR,WAAW;gBACb;aACD;YACD,QAAQ;gBACN;oBACE,QAAQ;oBACR,QAAQ;gBACV;aACD;QACH;KACD;IACD,YAAY;QACV;YACE,QAAQ;YACR,iBAAiB;gBACf;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;aACD;QACH;QACA;YACE,QAAQ;YACR,iBAAiB;gBACf;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;aACD;QACH;KACD;IACD,UAAU;QACR;YACE,QAAQ;YACR,QAAQ;YACR,OAAO;QACT;QACA;YACE,QAAQ;YACR,QAAQ;YACR,OAAO;QACT;QACA;YACE,QAAQ;YACR,QAAQ;YACR,OAAO;QACT;KACD;IACD,SAAS;QACP;YACE,QAAQ;YACR,QAAQ;gBACN,QAAQ;gBACR,UAAU;oBACR;wBACE,QAAQ;wBACR,QAAQ;oBACV;oBACA;wBACE,QAAQ;wBACR,QAAQ;oBACV;oBACA;wBACE,QAAQ;wBACR,QAAQ;oBACV;oBACA;wBACE,QAAQ;wBACR,QAAQ;oBACV;oBACA;wBACE,QAAQ;wBACR,QAAQ;oBACV;iBACD;YACH;QACF;QACA;YACE,QAAQ;YACR,QAAQ;gBACN,QAAQ;gBACR,UAAU;oBACR;wBACE,QAAQ;wBACR,QAAQ;oBACV;oBACA;wBACE,QAAQ;wBACR,QAAQ;oBACV;oBACA;wBACE,QAAQ;wBACR,QAAQ;oBACV;oBACA;wBACE,QAAQ;wBACR,QAAQ;oBACV;oBACA;wBACE,QAAQ;wBACR,QAAQ;oBACV;iBACD;YACH;QACF;KACD;AACH;AAGO,MAAM,aAAa","debugId":null}},
    {"offset": {"line": 628, "column": 0}, "map": {"version":3,"sources":["file:///home/joe/bootcamp-temp/coin-flip-frontend/src/components/coin-flip/coin-flip-data-access.tsx"],"sourcesContent":["'use client'\n\nimport { Program, AnchorProvider } from '@coral-xyz/anchor'\nimport { useConnection } from '@solana/wallet-adapter-react'\nimport { PublicKey, SystemProgram } from '@solana/web3.js'\nimport { useMutation, useQuery } from '@tanstack/react-query'\nimport { useMemo } from 'react'\nimport BN from 'bn.js'\nimport { useCluster } from '../cluster/cluster-data-access'\nimport { useAnchorProvider } from '../solana/solana-provider'\nimport { useTransactionToast } from '../use-transaction-toast'\nimport { toast } from 'sonner'\nimport { SendTransactionError } from '@solana/web3.js'\nimport { IDL, PROGRAM_ID } from '@/lib/idl'\n\nconst LAMPORTS_PER_SOL = 1_000_000_000\n\nfunction getCoinFlipProgram(provider: AnchorProvider) {\n  return new Program(IDL, provider);\n}\n\nfunction getCoinFlipProgramId(): PublicKey {\n  return new PublicKey(PROGRAM_ID)\n}\n\nasync function getTransactionLogs(error: any, connection: any) {\n  if (error instanceof SendTransactionError) {\n    try {\n      return await error.getLogs(connection)\n    } catch {\n      return null\n    }\n  }\n  return error.logs || null\n}\n\ninterface InitializeArgs {\n  fee_percentage: number\n}\n\ninterface DepositArgs {\n  amount: number\n}\n\ninterface WithdrawArgs {\n  amount: number\n}\n\nexport function useCoinFlipProgram() {\n  const { connection } = useConnection()\n  const { cluster } = useCluster()\n  const provider = useAnchorProvider()\n  const transactionToast = useTransactionToast()\n\n  const programId = useMemo(() => getCoinFlipProgramId(), [])\n  const program = useMemo(() => getCoinFlipProgram(provider), [provider])\n\n  // Get the global game state PDA\n  const [globalGameState] = useMemo(() => PublicKey.findProgramAddressSync(\n    [Buffer.from('global_gamestate')],\n    programId\n  ), [programId])\n\n  const accounts = useQuery({\n    queryKey: ['coin_flip', 'all', { cluster }],\n    queryFn: () => (program.account as any).gameState.all(),\n  })\n\n  // Query for the global game state specifically\n  const globalGameStateQuery = useQuery({\n    queryKey: ['coin_flip', 'global_gamestate', { cluster }],\n    queryFn: async () => {\n      try {\n        return await (program.account as any).gameState.fetch(globalGameState)\n      } catch (error: any) {\n        if (error.message?.includes('Account does not exist')) {\n          return null\n        }\n        throw error\n      }\n    },\n  })\n\n  const getProgramAccount = useQuery({\n    queryKey: ['get-program-account', { cluster }],\n    queryFn: () => connection.getParsedAccountInfo(programId),\n  })\n\n  const initialize = useMutation<string, Error, InitializeArgs>({\n    mutationKey: ['game_state', 'initialize', { cluster }],\n    mutationFn: async ({ fee_percentage }) => {\n      try {\n        return await (program.methods as any)\n          .initialize(new BN(fee_percentage))\n          .accounts({\n            authority: provider.wallet.publicKey,\n            gameState: globalGameState,\n            systemProgram: SystemProgram.programId,\n          })\n          .rpc()\n      } catch (error: any) {\n        await getTransactionLogs(error, connection)\n        throw error\n      }\n    },\n    onSuccess: (signature) => {\n      transactionToast(signature)\n      accounts.refetch()\n      globalGameStateQuery.refetch()\n    },\n    onError: async (error) => {\n      await getTransactionLogs(error, connection)\n      toast.error(`Failed to initialize: ${error.message}`)\n    },\n  })\n\n  const deposit_to_gamestate = useMutation<string, Error, DepositArgs>({\n    mutationKey: ['game_state', 'deposit', { cluster }],\n    mutationFn: async ({ amount }) => {\n      try {\n        return await (program.methods as any)\n          .deposit(new BN(amount))\n          .accounts({ \n            authority: provider.wallet.publicKey,\n            gameState: globalGameState, \n            systemProgram: SystemProgram.programId \n          })\n          .rpc()\n      } catch (error: any) {\n        await getTransactionLogs(error, connection)\n        throw error\n      }\n    },\n    onSuccess: (signature) => {\n      transactionToast(signature)\n      accounts.refetch()\n      globalGameStateQuery.refetch()\n    },\n    onError: async (error) => {\n      await getTransactionLogs(error, connection)\n      toast.error(`Failed to deposit: ${error.message}`)\n    },\n  })\n\n  const withdraw = useMutation<string, Error, WithdrawArgs>({\n    mutationKey: ['game_state', 'withdraw', { cluster }],\n    mutationFn: async ({ amount }) => {\n      try {\n        return await (program.methods as any)\n          .withdraw(new BN(amount))\n          .accounts({  \n            authority: provider.wallet.publicKey,\n            gameState: globalGameState, \n            systemProgram: SystemProgram.programId \n          })\n          .rpc()\n      } catch (error: any) {\n        await getTransactionLogs(error, connection)\n        throw error\n      }\n    },\n    onSuccess: (signature) => {\n      transactionToast(signature)\n      accounts.refetch()\n      globalGameStateQuery.refetch()\n    },\n    onError: async (error) => {\n      await getTransactionLogs(error, connection)\n      toast.error(`Failed to withdraw: ${error.message}`)\n    },\n  })\n\n  return {\n    program,\n    programId,\n    accounts,\n    globalGameState,\n    globalGameStateQuery,\n    getProgramAccount,\n    initialize,\n    deposit_to_gamestate,\n    withdraw,\n  }\n}\n\nexport function useCoinFlipProgramAccount({\n  user,\n  gameNumber\n}: {\n  user: PublicKey\n  gameNumber?: number\n}) {\n  const { connection } = useConnection()\n  const { cluster } = useCluster()\n  const transactionToast = useTransactionToast()\n  const { program, globalGameState, globalGameStateQuery } = useCoinFlipProgram()\n\n  const currentGameNumber = useMemo(() => \n    gameNumber !== undefined ? gameNumber : (globalGameStateQuery.data?.totalGames?.toNumber() || 0), \n    [gameNumber, globalGameStateQuery.data?.totalGames]\n  )\n\n  const [betAccount] = useMemo(() => {\n    const gameNumber = globalGameStateQuery.data?.totalGames?.toNumber() || 0\n    const gameNumberBuf = new BN(gameNumber).toArrayLike(Buffer, 'le', 8)\n    return PublicKey.findProgramAddressSync(\n      [Buffer.from('bet_account'), user.toBuffer(), gameNumberBuf],\n      (program as any).programId\n    )\n  }, [user, globalGameStateQuery.data?.totalGames, program])\n\n  const placeBet = useMutation<string, Error, { amount: number; choice: number }>({\n    mutationKey: ['bet_account', 'place_bet', { cluster, betAccount: betAccount.toString() }],\n    mutationFn: async ({ amount, choice }) => {\n      if (![0, 1].includes(choice)) throw new Error('Choice must be 0 or 1')\n      if (user.equals(new PublicKey('11111111111111111111111111111111'))) throw new Error('Invalid user public key')\n     \n      const gameStateData = await (program.account as any).gameState.fetch(globalGameState)\n       \n      const payout = amount * 2\n      const fee = Math.floor((payout * gameStateData.feePercentage.toNumber()) / 100)\n      const userWinnings = payout - fee\n\n      if (userWinnings > gameStateData.totalAmount.toNumber()) {\n        throw new Error(`Insufficient funds in game state. Available: ${gameStateData.totalAmount.toString()}, Required: ${userWinnings}`)\n      }\n\n      return await (program.methods as any)\n        .placeBet(new BN(amount), choice)\n        .accounts({\n          user,\n          gameState: globalGameState,\n          betAccount,\n          systemProgram: SystemProgram.programId,\n        })\n        .rpc()\n    },\n    onSuccess: async (signature) => {\n      transactionToast(signature)\n      await globalGameStateQuery.refetch()\n    },\n    onError: async (error) => {\n      await getTransactionLogs(error, connection)\n      toast.error(`Failed to place bet: ${error.message}`)\n    },\n  })\n\n  const accountQuery = useQuery({\n    queryKey: ['bet_account', 'fetch', { cluster, betAccount: betAccount.toString(), gameNumber: currentGameNumber }],\n    queryFn: async () => {\n      try {\n        return await (program.account as any).betAccount.fetch(betAccount)\n      } catch (error: any) {\n        if (error.message?.includes('Account does not exist')) {\n          return null\n        }\n        throw error\n      }\n    },\n    enabled: !!program && !!betAccount && !!globalGameStateQuery.data,\n    retry: false,\n  })\n\n  return {\n    placeBet,\n    currentGameNumber,\n    gameStateData: globalGameStateQuery.data,\n    gameState: globalGameState,\n    betAccount,\n    accountQuery,\n  }\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1014, "column": 0}, "map": {"version":3,"sources":["file:///home/joe/bootcamp-temp/coin-flip-frontend/src/components/wallet/WalletButton.tsx"],"sourcesContent":["'use client'\nimport { WalletMultiButton } from '@solana/wallet-adapter-react-ui'\nimport { useConnection, useWallet } from '@solana/wallet-adapter-react'\nimport { LAMPORTS_PER_SOL } from '@solana/web3.js'\nimport { useState, useEffect } from 'react'\nimport { toast } from 'sonner'\n\n/*\nfunction AirdropButton() {\n  const { connection } = useConnection()\n  const { publicKey } = useWallet()\n  const [isAirdropping, setIsAirdropping] = useState(false)\n\n \n  const handleAirdrop = async () => {\n    if (!publicKey) {\n      toast.error('Please connect your wallet first')\n      return\n    }\n\n    setIsAirdropping(true)\n    try {\n      console.log('Requesting airdrop for:', publicKey.toString())\n      \n      // Check current balance\n      const currentBalance = await connection.getBalance(publicKey)\n      console.log('Current balance:', currentBalance / LAMPORTS_PER_SOL, 'SOL')\n      \n      // Request 2 SOL airdrop\n      const signature = await connection.requestAirdrop(\n        publicKey,\n        2 * LAMPORTS_PER_SOL\n      )\n      \n      // Wait for confirmation\n      await connection.confirmTransaction(signature)\n      \n      // Check new balance\n      const newBalance = await connection.getBalance(publicKey)\n      console.log('New balance:', newBalance / LAMPORTS_PER_SOL, 'SOL')\n      \n      toast.success(`Airdropped 2 SOL! New balance: ${(newBalance / LAMPORTS_PER_SOL).toFixed(2)} SOL`)\n    } catch (error: any) {\n      console.error('Airdrop failed:', error)\n      toast.error(`Airdrop failed: ${error.message}`)\n    } finally {\n      setIsAirdropping(false)\n    }\n  }\n\n  if (!publicKey) {\n    return null\n  }\n\n  return (\n    <button\n      onClick={handleAirdrop}\n      disabled={isAirdropping}\n      className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 disabled:opacity-50 disabled:cursor-not-allowed\"\n    >\n      {isAirdropping ? 'Airdropping...' : 'Airdrop 2 SOL'}\n    </button>\n  )\n}\n*/\nexport function WalletButton() {\n  const [mounted, setMounted] = useState(false)\n\n  // Ensure component only renders after hydration\n  useEffect(() => {\n    setMounted(true)\n  }, [])\n\n  if (!mounted) {\n    // Return a placeholder that matches the server-rendered HTML\n    return (\n      <div className=\"flex justify-end items-center gap-2 p-4\">\n        <button className=\"px-4 py-2 bg-gray-300 rounded\" disabled>\n          Loading...\n        </button>\n        <button className=\"btn-primary\" disabled>\n          Loading...\n        </button>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"flex justify-end items-center gap-2 p-4\">\n     \n      <WalletMultiButton className=\"btn-primary\" />\n    </div>\n  )\n}"],"names":[],"mappings":";;;;AACA;AAGA;;;AAJA;;;AAiEO,SAAS;;IACd,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,gDAAgD;IAChD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR,WAAW;QACb;iCAAG,EAAE;IAEL,IAAI,CAAC,SAAS;QACZ,6DAA6D;QAC7D,qBACE,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAO,WAAU;oBAAgC,QAAQ;8BAAC;;;;;;8BAG3D,6LAAC;oBAAO,WAAU;oBAAc,QAAQ;8BAAC;;;;;;;;;;;;IAK/C;IAEA,qBACE,6LAAC;QAAI,WAAU;kBAEb,cAAA,6LAAC,kMAAA,CAAA,oBAAiB;YAAC,WAAU;;;;;;;;;;;AAGnC;GA5BgB;KAAA","debugId":null}},
    {"offset": {"line": 1092, "column": 0}, "map": {"version":3,"sources":["file:///home/joe/bootcamp-temp/coin-flip-frontend/src/components/layout/Header.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useMemo } from 'react'\nimport { useWallet } from '@solana/wallet-adapter-react'\nimport { Button } from '@/components/ui/button'\nimport { Crown, Menu, X } from 'lucide-react'\nimport { useCoinFlipProgram } from '../coin-flip/coin-flip-data-access'\nimport { useRouter } from 'next/navigation'\nimport { toast } from 'sonner'\nimport { WalletButton } from '../wallet/WalletButton'\n\nexport function Header() {\n  const wallet = useWallet()\n  const router = useRouter()\n  const { globalGameStateQuery } = useCoinFlipProgram()\n  const [isMenuOpen, setIsMenuOpen] = useState(false)\n\n  // Check if connected wallet is the global game authority\n  const isAuthority = useMemo(() => {\n    if (!wallet.publicKey || !globalGameStateQuery.data) return false\n    return globalGameStateQuery.data.authority.equals(wallet.publicKey)\n  }, [wallet.publicKey, globalGameStateQuery.data])\n\n  const handleAdminAccess = () => {\n    if (!wallet.publicKey) {\n      toast.error('Please connect your wallet first')\n      return\n    }\n    \n    if (!globalGameStateQuery.data) {\n      toast.error('Game state not found. The game may not be initialized yet.')\n      return\n    }\n    \n    if (!isAuthority) {\n      toast.error('Access denied. Only the game authority can access admin panel.')\n      return\n    }\n    \n    router.push('/admin')\n  }\n\n  return (\n    <>\n      <header className=\"bg-gradient-to-r from-blue-900 via-blue-800 to-blue-900 shadow-xl border-b border-blue-500/30 sticky top-0 z-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between items-center h-20\">\n            {/* Logo */}\n            <div className=\"flex items-center\">\n              <button \n                onClick={() => router.push('/')}\n                className=\"flex items-center space-x-3 hover:opacity-80 transition-all duration-200 hover:scale-105\"\n              >\n                <div className=\"w-10 h-10 bg-white rounded-xl flex items-center justify-center shadow-lg\">\n                  <span className=\"text-blue-800 font-bold text-xl\">J</span>\n                </div>\n                <div className=\"flex flex-col\">\n                  <span className=\"text-xl font-bold text-white\">\n                    JUMBA CREATIONS\n                  </span>\n                </div>\n              </button>\n            </div>\n\n            {/* Desktop Navigation */}\n            <div className=\"hidden md:flex items-center space-x-4\">\n              {/* Admin Button - Only show if user is the authority */}\n              {isAuthority && (\n                <Button\n                  onClick={handleAdminAccess}\n                  variant=\"outline\"\n                  className=\"flex items-center gap-2 border-blue-300/40 text-white hover:bg-blue-500/20 hover:border-blue-300/60 bg-blue-500/10 backdrop-blur-sm transition-all duration-200\"\n                >\n                  <Crown className=\"h-4 w-4\" />\n                  Admin Panel\n                </Button>\n              )}\n\n              {/* Admin Button - Show for everyone if game not initialized yet */}\n              {!globalGameStateQuery.data && !globalGameStateQuery.isLoading && wallet.publicKey && (\n                <Button\n                  onClick={() => router.push('/admin')}\n                  variant=\"outline\"\n                  className=\"flex items-center gap-2 border-cyan-300/40 text-white hover:bg-cyan-500/20 hover:border-cyan-300/60 bg-cyan-500/10 backdrop-blur-sm transition-all duration-200\"\n                >\n                  <Crown className=\"h-4 w-4\" />\n                  Initialize Game\n                </Button>\n              )}\n\n              {/* Wallet Button */}\n              <div className=\"ml-2\">\n                <WalletButton />\n              </div>\n            </div>\n\n            {/* Mobile menu button */}\n            <div className=\"md:hidden\">\n              <button\n                onClick={() => setIsMenuOpen(!isMenuOpen)}\n                className=\"p-2 rounded-lg text-white hover:bg-blue-500/20 hover:text-blue-100 transition-all duration-200\"\n              >\n                {isMenuOpen ? <X className=\"h-6 w-6\" /> : <Menu className=\"h-6 w-6\" />}\n              </button>\n            </div>\n          </div>\n        </div>\n\n        {/* Mobile Navigation */}\n        {isMenuOpen && (\n          <div className=\"md:hidden border-t border-blue-500/30 bg-gradient-to-r from-blue-900/95 via-blue-800/95 to-blue-900/95 backdrop-blur-sm\">\n            <div className=\"px-4 py-4 space-y-3\">\n              {/* Admin Button - Only show if user is the authority */}\n              {isAuthority && (\n                <Button\n                  onClick={handleAdminAccess}\n                  variant=\"outline\"\n                  className=\"w-full flex items-center gap-2 border-blue-300/40 text-white hover:bg-blue-500/20 hover:border-blue-300/60 bg-blue-500/10 backdrop-blur-sm transition-all duration-200\"\n                >\n                  <Crown className=\"h-4 w-4\" />\n                  Admin Panel\n                </Button>\n              )}\n\n              {/* Admin Button - Show for everyone if game not initialized yet */}\n              {!globalGameStateQuery.data && !globalGameStateQuery.isLoading && wallet.publicKey && (\n                <Button\n                  onClick={() => router.push('/admin')}\n                  variant=\"outline\"\n                  className=\"w-full flex items-center gap-2 border-cyan-300/40 text-white hover:bg-cyan-500/20 hover:border-cyan-300/60 bg-cyan-500/10 backdrop-blur-sm transition-all duration-200\"\n                >\n                  <Crown className=\"h-4 w-4\" />\n                  Initialize Game\n                </Button>\n              )}\n\n              <div className=\"pt-2\">\n                <WalletButton />\n              </div>\n            </div>\n          </div>\n        )}\n      </header>\n    </>\n  )\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1395, "column": 0}, "map": {"version":3,"sources":["file:///home/joe/bootcamp-temp/coin-flip-frontend/src/components/wallet/WalletProvider.tsx"],"sourcesContent":["'use client'\nimport { ConnectionProvider, WalletProvider } from '@solana/wallet-adapter-react'\nimport { WalletAdapterNetwork } from '@solana/wallet-adapter-base'\nimport { PhantomWalletAdapter } from '@solana/wallet-adapter-wallets'\nimport { WalletModalProvider } from '@solana/wallet-adapter-react-ui'\nimport { clusterApiUrl } from '@solana/web3.js'\nimport { useMemo } from 'react'\n\n// Import wallet adapter CSS\nimport '@solana/wallet-adapter-react-ui/styles.css'\n\nexport function AppWalletProvider({ children }: { children: React.ReactNode }) {\n  // Change this to connect to your local validator\n  const endpoint = useMemo(() => 'https://api.devnet.solana.com', [])\n // Match your deployed program\n  \n  const wallets = useMemo(\n    () => [new PhantomWalletAdapter()],\n    []\n  )\n\n  return (\n    <ConnectionProvider endpoint={endpoint}>\n      <WalletProvider wallets={wallets} autoConnect>\n        <WalletModalProvider>\n          {children}\n        </WalletModalProvider>\n      </WalletProvider>\n    </ConnectionProvider>\n  )\n}"],"names":[],"mappings":";;;;AACA;AAAA;AAEA;AACA;AAEA;;;AANA;;;;;;AAWO,SAAS,kBAAkB,KAA2C;QAA3C,EAAE,QAAQ,EAAiC,GAA3C;;IAChC,iDAAiD;IACjD,MAAM,WAAW,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD;+CAAE,IAAM;8CAAiC,EAAE;IACnE,8BAA8B;IAE7B,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD;8CACpB,IAAM;gBAAC,IAAI,oLAAA,CAAA,uBAAoB;aAAG;6CAClC,EAAE;IAGJ,qBACE,6LAAC,6LAAA,CAAA,qBAAkB;QAAC,UAAU;kBAC5B,cAAA,6LAAC,yLAAA,CAAA,iBAAc;YAAC,SAAS;YAAS,WAAW;sBAC3C,cAAA,6LAAC,oMAAA,CAAA,sBAAmB;0BACjB;;;;;;;;;;;;;;;;AAKX;GAnBgB;KAAA","debugId":null}},
    {"offset": {"line": 1461, "column": 0}, "map": {"version":3,"sources":["file:///home/joe/bootcamp-temp/coin-flip-frontend/src/components/providers/Provider.tsx"],"sourcesContent":["'use client'\n\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query'\nimport { useState } from 'react'\nimport { ClusterProvider } from '@/components/cluster/cluster-data-access'\nimport { AppWalletProvider } from '@/components/wallet/WalletProvider'\nimport { Toaster } from 'sonner'\n\nexport function Providers({ children }: { children: React.ReactNode }) {\n  // Create QueryClient inside the client component\n  const [queryClient] = useState(() => new QueryClient())\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      <ClusterProvider>\n        <AppWalletProvider>\n          {children}\n          <Toaster />\n        </AppWalletProvider>\n      </ClusterProvider>\n    </QueryClientProvider>\n  )\n}"],"names":[],"mappings":";;;;AAEA;AAAA;AACA;AACA;AACA;AACA;;;AANA;;;;;;AAQO,SAAS,UAAU,KAA2C;QAA3C,EAAE,QAAQ,EAAiC,GAA3C;;IACxB,iDAAiD;IACjD,MAAM,CAAC,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD;8BAAE,IAAM,IAAI,gLAAA,CAAA,cAAW;;IAEpD,qBACE,6LAAC,yLAAA,CAAA,sBAAmB;QAAC,QAAQ;kBAC3B,cAAA,6LAAC,6JAAA,CAAA,kBAAe;sBACd,cAAA,6LAAC,iJAAA,CAAA,oBAAiB;;oBACf;kCACD,6LAAC,2IAAA,CAAA,UAAO;;;;;;;;;;;;;;;;;;;;;AAKlB;GAdgB;KAAA","debugId":null}},
    {"offset": {"line": 1527, "column": 0}, "map": {"version":3,"sources":["file:///home/joe/bootcamp-temp/coin-flip-frontend/src/components/layout/Footer.tsx"],"sourcesContent":["'use client'\n\nimport { Github, Twitter, Mail, Heart } from 'lucide-react'\n\nexport function Footer() {\n  const currentYear = new Date().getFullYear()\n\n  const socialLinks = [\n    {\n      name: 'GitHub',\n      icon: Github,\n      href: 'https://github.com/yourusername', // Replace with your GitHub\n      color: 'hover:text-gray-900'\n    },\n    {\n      name: 'Twitter',\n      icon: Twitter,\n      href: 'https://twitter.com/yourusername', // Replace with your Twitter\n      color: 'hover:text-blue-400'\n    },\n    {\n      name: 'Email',\n      icon: Mail,\n      href: 'mailto:your.email@example.com', // Replace with your email\n      color: 'hover:text-red-400'\n    }\n  ]\n\n  return (\n    <footer className=\"bg-gray-900 text-white\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n          {/* Logo and Description */}\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"w-8 h-8 bg-gradient-to-r from-purple-500 to-blue-500 rounded-lg flex items-center justify-center\">\n                <span className=\"text-white font-bold text-lg\">J</span>\n              </div>\n              <span className=\"text-xl font-bold bg-gradient-to-r from-purple-400 to-blue-400 bg-clip-text text-transparent\">\n                JUMBA CREATIONS\n              </span>\n            </div>\n            <p className=\"text-gray-400 text-sm max-w-md\">\n              Building innovative blockchain gaming experiences on Solana. \n              Experience the thrill of decentralized coin flipping with provable fairness.\n            </p>\n          </div>\n\n          {/* Quick Links */}\n          <div className=\"space-y-4\">\n            <h3 className=\"text-lg font-semibold\">Quick Links</h3>\n            <ul className=\"space-y-2 text-sm\">\n              <li>\n                <a href=\"/\" className=\"text-gray-400 hover:text-white transition-colors\">\n                  Play Game\n                </a>\n              </li>\n              <li>\n                <a href=\"/admin\" className=\"text-gray-400 hover:text-white transition-colors\">\n                  Admin Panel\n                </a>\n              </li>\n              <li>\n                <a href=\"https://docs.solana.com\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-gray-400 hover:text-white transition-colors\">\n                  About Solana\n                </a>\n              </li>\n              <li>\n                <a href=\"https://explorer.solana.com\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-gray-400 hover:text-white transition-colors\">\n                  Solana Explorer\n                </a>\n              </li>\n            </ul>\n          </div>\n\n          {/* Social Links */}\n          <div className=\"space-y-4\">\n            <h3 className=\"text-lg font-semibold\">Connect With Us</h3>\n            <div className=\"flex space-x-4\">\n              {socialLinks.map((link) => {\n                const Icon = link.icon\n                return (\n                  <a\n                    key={link.name}\n                    href={link.href}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    className={`text-gray-400 ${link.color} transition-colors duration-200`}\n                    aria-label={link.name}\n                  >\n                    <Icon className=\"h-6 w-6\" />\n                  </a>\n                )\n              })}\n            </div>\n            <div className=\"text-sm text-gray-400\">\n              <p>Get in touch for collaborations,</p>\n              <p>bug reports, or just to say hello!</p>\n            </div>\n          </div>\n        </div>\n\n        {/* Bottom Bar */}\n        <div className=\"border-t border-gray-800 mt-8 pt-8\">\n          <div className=\"flex flex-col md:flex-row justify-between items-center space-y-4 md:space-y-0\">\n            <div className=\"text-sm text-gray-400\">\n              © {currentYear} Jumba Creations. All rights reserved.\n            </div>\n            \n            <div className=\"flex items-center space-x-4 text-sm text-gray-400\">\n              <span className=\"flex items-center gap-1\">\n                Made with <Heart className=\"h-4 w-4 text-red-500\" /> on Solana\n              </span>\n            </div>\n\n            <div className=\"flex space-x-6 text-sm\">\n              <a href=\"#\" className=\"text-gray-400 hover:text-white transition-colors\">\n                Privacy Policy\n              </a>\n              <a href=\"#\" className=\"text-gray-400 hover:text-white transition-colors\">\n                Terms of Service\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </footer>\n  )\n}"],"names":[],"mappings":";;;;AAEA;AAAA;AAAA;AAAA;AAFA;;;AAIO,SAAS;IACd,MAAM,cAAc,IAAI,OAAO,WAAW;IAE1C,MAAM,cAAc;QAClB;YACE,MAAM;YACN,MAAM,yMAAA,CAAA,SAAM;YACZ,MAAM;YACN,OAAO;QACT;QACA;YACE,MAAM;YACN,MAAM,2MAAA,CAAA,UAAO;YACb,MAAM;YACN,OAAO;QACT;QACA;YACE,MAAM;YACN,MAAM,qMAAA,CAAA,OAAI;YACV,MAAM;YACN,OAAO;QACT;KACD;IAED,qBACE,6LAAC;QAAO,WAAU;kBAChB,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAI,WAAU;;sCAEb,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAI,WAAU;sDACb,cAAA,6LAAC;gDAAK,WAAU;0DAA+B;;;;;;;;;;;sDAEjD,6LAAC;4CAAK,WAAU;sDAA+F;;;;;;;;;;;;8CAIjH,6LAAC;oCAAE,WAAU;8CAAiC;;;;;;;;;;;;sCAOhD,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAG,WAAU;8CAAwB;;;;;;8CACtC,6LAAC;oCAAG,WAAU;;sDACZ,6LAAC;sDACC,cAAA,6LAAC;gDAAE,MAAK;gDAAI,WAAU;0DAAmD;;;;;;;;;;;sDAI3E,6LAAC;sDACC,cAAA,6LAAC;gDAAE,MAAK;gDAAS,WAAU;0DAAmD;;;;;;;;;;;sDAIhF,6LAAC;sDACC,cAAA,6LAAC;gDAAE,MAAK;gDAA0B,QAAO;gDAAS,KAAI;gDAAsB,WAAU;0DAAmD;;;;;;;;;;;sDAI3I,6LAAC;sDACC,cAAA,6LAAC;gDAAE,MAAK;gDAA8B,QAAO;gDAAS,KAAI;gDAAsB,WAAU;0DAAmD;;;;;;;;;;;;;;;;;;;;;;;sCAQnJ,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAG,WAAU;8CAAwB;;;;;;8CACtC,6LAAC;oCAAI,WAAU;8CACZ,YAAY,GAAG,CAAC,CAAC;wCAChB,MAAM,OAAO,KAAK,IAAI;wCACtB,qBACE,6LAAC;4CAEC,MAAM,KAAK,IAAI;4CACf,QAAO;4CACP,KAAI;4CACJ,WAAW,AAAC,iBAA2B,OAAX,KAAK,KAAK,EAAC;4CACvC,cAAY,KAAK,IAAI;sDAErB,cAAA,6LAAC;gDAAK,WAAU;;;;;;2CAPX,KAAK,IAAI;;;;;oCAUpB;;;;;;8CAEF,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;sDAAE;;;;;;sDACH,6LAAC;sDAAE;;;;;;;;;;;;;;;;;;;;;;;;8BAMT,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;;oCAAwB;oCAClC;oCAAY;;;;;;;0CAGjB,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;oCAAK,WAAU;;wCAA0B;sDAC9B,6LAAC,uMAAA,CAAA,QAAK;4CAAC,WAAU;;;;;;wCAAyB;;;;;;;;;;;;0CAIxD,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAE,MAAK;wCAAI,WAAU;kDAAmD;;;;;;kDAGzE,6LAAC;wCAAE,MAAK;wCAAI,WAAU;kDAAmD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASvF;KA5HgB","debugId":null}}]
}