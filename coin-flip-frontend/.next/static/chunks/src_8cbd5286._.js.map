{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/joe/bootcamp-temp/coin-flip-frontend/src/components/wallet/WalletButton.tsx"],"sourcesContent":["'use client'\nimport { WalletMultiButton } from '@solana/wallet-adapter-react-ui'\nimport { useConnection, useWallet } from '@solana/wallet-adapter-react'\nimport { LAMPORTS_PER_SOL } from '@solana/web3.js'\nimport { useState, useEffect } from 'react'\nimport { toast } from 'sonner'\n\nfunction AirdropButton() {\n  const { connection } = useConnection()\n  const { publicKey } = useWallet()\n  const [isAirdropping, setIsAirdropping] = useState(false)\n\n  const handleAirdrop = async () => {\n    if (!publicKey) {\n      toast.error('Please connect your wallet first')\n      return\n    }\n\n    setIsAirdropping(true)\n    try {\n      console.log('Requesting airdrop for:', publicKey.toString())\n      \n      // Check current balance\n      const currentBalance = await connection.getBalance(publicKey)\n      console.log('Current balance:', currentBalance / LAMPORTS_PER_SOL, 'SOL')\n      \n      // Request 2 SOL airdrop\n      const signature = await connection.requestAirdrop(\n        publicKey,\n        2 * LAMPORTS_PER_SOL\n      )\n      \n      // Wait for confirmation\n      await connection.confirmTransaction(signature)\n      \n      // Check new balance\n      const newBalance = await connection.getBalance(publicKey)\n      console.log('New balance:', newBalance / LAMPORTS_PER_SOL, 'SOL')\n      \n      toast.success(`Airdropped 2 SOL! New balance: ${(newBalance / LAMPORTS_PER_SOL).toFixed(2)} SOL`)\n    } catch (error: any) {\n      console.error('Airdrop failed:', error)\n      toast.error(`Airdrop failed: ${error.message}`)\n    } finally {\n      setIsAirdropping(false)\n    }\n  }\n\n  if (!publicKey) {\n    return null\n  }\n\n  return (\n    <button\n      onClick={handleAirdrop}\n      disabled={isAirdropping}\n      className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 disabled:opacity-50 disabled:cursor-not-allowed\"\n    >\n      {isAirdropping ? 'Airdropping...' : 'Airdrop 2 SOL'}\n    </button>\n  )\n}\n\nexport function WalletButton() {\n  const [mounted, setMounted] = useState(false)\n\n  // Ensure component only renders after hydration\n  useEffect(() => {\n    setMounted(true)\n  }, [])\n\n  if (!mounted) {\n    // Return a placeholder that matches the server-rendered HTML\n    return (\n      <div className=\"flex justify-end items-center gap-2 p-4\">\n        <button className=\"px-4 py-2 bg-gray-300 rounded\" disabled>\n          Loading...\n        </button>\n        <button className=\"btn-primary\" disabled>\n          Loading...\n        </button>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"flex justify-end items-center gap-2 p-4\">\n      <AirdropButton />\n      <WalletMultiButton className=\"btn-primary\" />\n    </div>\n  )\n}"],"names":[],"mappings":";;;;AACA;AACA;AAAA;AACA;AACA;AACA;;;AALA;;;;;;AAOA,SAAS;;IACP,MAAM,EAAE,UAAU,EAAE,GAAG,CAAA,GAAA,wLAAA,CAAA,gBAAa,AAAD;IACnC,MAAM,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,oLAAA,CAAA,YAAS,AAAD;IAC9B,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEnD,MAAM,gBAAgB;QACpB,IAAI,CAAC,WAAW;YACd,2IAAA,CAAA,QAAK,CAAC,KAAK,CAAC;YACZ;QACF;QAEA,iBAAiB;QACjB,IAAI;YACF,QAAQ,GAAG,CAAC,2BAA2B,UAAU,QAAQ;YAEzD,wBAAwB;YACxB,MAAM,iBAAiB,MAAM,WAAW,UAAU,CAAC;YACnD,QAAQ,GAAG,CAAC,oBAAoB,iBAAiB,2KAAA,CAAA,mBAAgB,EAAE;YAEnE,wBAAwB;YACxB,MAAM,YAAY,MAAM,WAAW,cAAc,CAC/C,WACA,IAAI,2KAAA,CAAA,mBAAgB;YAGtB,wBAAwB;YACxB,MAAM,WAAW,kBAAkB,CAAC;YAEpC,oBAAoB;YACpB,MAAM,aAAa,MAAM,WAAW,UAAU,CAAC;YAC/C,QAAQ,GAAG,CAAC,gBAAgB,aAAa,2KAAA,CAAA,mBAAgB,EAAE;YAE3D,2IAAA,CAAA,QAAK,CAAC,OAAO,CAAC,AAAC,kCAA4E,OAA3C,CAAC,aAAa,2KAAA,CAAA,mBAAgB,EAAE,OAAO,CAAC,IAAG;QAC7F,EAAE,OAAO,OAAY;YACnB,QAAQ,KAAK,CAAC,mBAAmB;YACjC,2IAAA,CAAA,QAAK,CAAC,KAAK,CAAC,AAAC,mBAAgC,OAAd,MAAM,OAAO;QAC9C,SAAU;YACR,iBAAiB;QACnB;IACF;IAEA,IAAI,CAAC,WAAW;QACd,OAAO;IACT;IAEA,qBACE,6LAAC;QACC,SAAS;QACT,UAAU;QACV,WAAU;kBAET,gBAAgB,mBAAmB;;;;;;AAG1C;GAtDS;;QACgB,wLAAA,CAAA,gBAAa;QACd,oLAAA,CAAA,YAAS;;;KAFxB;AAwDF,SAAS;;IACd,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,gDAAgD;IAChD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR,WAAW;QACb;iCAAG,EAAE;IAEL,IAAI,CAAC,SAAS;QACZ,6DAA6D;QAC7D,qBACE,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAO,WAAU;oBAAgC,QAAQ;8BAAC;;;;;;8BAG3D,6LAAC;oBAAO,WAAU;oBAAc,QAAQ;8BAAC;;;;;;;;;;;;IAK/C;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;;;;;0BACD,6LAAC,kMAAA,CAAA,oBAAiB;gBAAC,WAAU;;;;;;;;;;;;AAGnC;IA5BgB;MAAA","debugId":null}},
    {"offset": {"line": 152, "column": 0}, "map": {"version":3,"sources":["file:///home/joe/bootcamp-temp/coin-flip-frontend/src/components/cluster/cluster-ui.tsx"],"sourcesContent":["import { ReactNode } from 'react'\n\ninterface ExplorerLinkProps {\n  path: string\n  label: ReactNode\n  className?: string\n}\n\nexport function ExplorerLink({ path, label, className }: ExplorerLinkProps) {\n  const baseUrl = 'https://explorer.solana.com'\n  return (\n    <a \n      href={`${baseUrl}/${path}?cluster=localnet`}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      className={`text-blue-600 hover:text-blue-800 underline ${className}`}\n    >\n      {label}\n    </a>\n  )\n}"],"names":[],"mappings":";;;;;AAQO,SAAS,aAAa,KAA6C;QAA7C,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAqB,GAA7C;IAC3B,MAAM,UAAU;IAChB,qBACE,6LAAC;QACC,MAAM,AAAC,GAAa,OAAX,SAAQ,KAAQ,OAAL,MAAK;QACzB,QAAO;QACP,KAAI;QACJ,WAAW,AAAC,+CAAwD,OAAV;kBAEzD;;;;;;AAGP;KAZgB","debugId":null}},
    {"offset": {"line": 184, "column": 0}, "map": {"version":3,"sources":["file:///home/joe/bootcamp-temp/coin-flip-frontend/src/components/solana/solana-provider.tsx"],"sourcesContent":["'use client'\nimport { AnchorProvider } from '@coral-xyz/anchor'\nimport { useConnection, useWallet } from '@solana/wallet-adapter-react'\nimport { useMemo } from 'react'\n\nexport function useAnchorProvider() {\n  const { connection } = useConnection()\n  const wallet = useWallet()\n\n  return useMemo(() => {\n    return new AnchorProvider(connection, wallet as any, {\n      commitment: 'confirmed',\n    })\n  }, [connection, wallet])\n}"],"names":[],"mappings":";;;AACA;AAAA;AACA;AAAA;AACA;;AAHA;;;;AAKO,SAAS;;IACd,MAAM,EAAE,UAAU,EAAE,GAAG,CAAA,GAAA,wLAAA,CAAA,gBAAa,AAAD;IACnC,MAAM,SAAS,CAAA,GAAA,oLAAA,CAAA,YAAS,AAAD;IAEvB,OAAO,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD;qCAAE;YACb,OAAO,IAAI,uLAAA,CAAA,iBAAc,CAAC,YAAY,QAAe;gBACnD,YAAY;YACd;QACF;oCAAG;QAAC;QAAY;KAAO;AACzB;GATgB;;QACS,wLAAA,CAAA,gBAAa;QACrB,oLAAA,CAAA,YAAS","debugId":null}},
    {"offset": {"line": 227, "column": 0}, "map": {"version":3,"sources":["file:///home/joe/bootcamp-temp/coin-flip-frontend/src/components/use-transaction-toast.tsx"],"sourcesContent":["'use client'\nimport { toast } from 'sonner'\n\nexport function useTransactionToast() {\n  return (signature: string) => {\n    toast.success('Transaction sent!', {\n      description: `Signature: ${signature.slice(0, 8)}...`,\n      action: {\n        label: 'View',\n        onClick: () => window.open(`https://explorer.solana.com/tx/${signature}?cluster=localnet`, '_blank')\n      }\n    })\n  }\n}"],"names":[],"mappings":";;;AACA;AADA;;AAGO,SAAS;IACd,OAAO,CAAC;QACN,2IAAA,CAAA,QAAK,CAAC,OAAO,CAAC,qBAAqB;YACjC,aAAa,AAAC,cAAmC,OAAtB,UAAU,KAAK,CAAC,GAAG,IAAG;YACjD,QAAQ;gBACN,OAAO;gBACP,SAAS,IAAM,OAAO,IAAI,CAAC,AAAC,kCAA2C,OAAV,WAAU,sBAAoB;YAC7F;QACF;IACF;AACF","debugId":null}},
    {"offset": {"line": 253, "column": 0}, "map": {"version":3,"sources":["file:///home/joe/bootcamp-temp/coin-flip-frontend/src/lib/idl.ts"],"sourcesContent":["// src/lib/idl.ts\n\nexport const IDL = {\n  \"address\": \"CK9rjq6oyLK8uJBkzkg3CBPW4ydBdKM5khQQUigFuqng\",\n  \"metadata\": {\n    \"name\": \"coin_flip_backend\",\n    \"version\": \"0.1.0\",\n    \"spec\": \"0.1.0\",\n    \"description\": \"Created with Anchor\"\n  },\n  \"instructions\": [\n    {\n      \"name\": \"deposit\",\n      \"discriminator\": [\n        242,    \n        35,\n        198,\n        137,\n        82,\n        225,\n        242,\n        182\n      ],\n      \"accounts\": [\n        {\n          \"name\": \"owner\",\n          \"writable\": true,\n          \"signer\": true,\n          \"relations\": [\n            \"game_state\"\n          ]\n        },\n        {\n          \"name\": \"game_state\",\n          \"writable\": true,\n          \"pda\": {\n            \"seeds\": [\n              {\n                \"kind\": \"const\",\n                \"value\": [\n                  103,\n                  97,\n                  109,\n                  101,\n                  115,\n                  116,\n                  97,\n                  116,\n                  101\n                ]\n              },\n              {\n                \"kind\": \"account\",\n                \"path\": \"owner\"\n              }\n            ]\n          }\n        },\n        {\n          \"name\": \"system_program\",\n          \"address\": \"11111111111111111111111111111111\"\n        }\n      ],\n      \"args\": [\n        {\n          \"name\": \"amount\",\n          \"type\": \"u64\"\n        }\n      ]\n    },\n    {\n      \"name\": \"initialize\",\n      \"discriminator\": [\n        175,\n        175,\n        109,\n        31,\n        13,\n        152,\n        155,\n        237\n      ],\n      \"accounts\": [\n        {\n          \"name\": \"owner\",\n          \"writable\": true,\n          \"signer\": true\n        },\n        {\n          \"name\": \"game_state\",\n          \"writable\": true,\n          \"pda\": {\n            \"seeds\": [\n              {\n                \"kind\": \"const\",\n                \"value\": [\n                  103,\n                  97,\n                  109,\n                  101,\n                  115,\n                  116,\n                  97,\n                  116,\n                  101\n                ]\n              },\n              {\n                \"kind\": \"account\",\n                \"path\": \"owner\"\n              }\n            ]\n          }\n        },\n        {\n          \"name\": \"system_program\",\n          \"address\": \"11111111111111111111111111111111\"\n        }\n      ],\n      \"args\": [\n        {\n          \"name\": \"fee_percentage\",\n          \"type\": \"u64\"\n        }\n      ]\n    },\n    {\n      \"name\": \"place_bet\",\n      \"discriminator\": [\n        222,\n        62,\n        67,\n        220,\n        63,\n        166,\n        126,\n        33\n      ],\n      \"accounts\": [\n        {\n          \"name\": \"user\",\n          \"writable\": true,\n          \"signer\": true\n        },\n        {\n          \"name\": \"owner\",\n          \"relations\": [\n            \"game_state\"\n          ]\n        },\n        {\n          \"name\": \"game_state\",\n          \"writable\": true,\n          \"pda\": {\n            \"seeds\": [\n              {\n                \"kind\": \"const\",\n                \"value\": [\n                  103,\n                  97,\n                  109,\n                  101,\n                  115,\n                  116,\n                  97,\n                  116,\n                  101\n                ]\n              },\n              {\n                \"kind\": \"account\",\n                \"path\": \"owner\"\n              }\n            ]\n          }\n        },\n        {\n          \"name\": \"bet_account\",\n          \"writable\": true,\n          \"pda\": {\n            \"seeds\": [\n              {\n                \"kind\": \"const\",\n                \"value\": [\n                  98,\n                  101,\n                  116,\n                  95,\n                  97,\n                  99,\n                  99,\n                  111,\n                  117,\n                  110,\n                  116\n                ]\n              },\n              {\n                \"kind\": \"account\",\n                \"path\": \"user\"\n              },\n              {\n                \"kind\": \"account\",\n                \"path\": \"game_state.total_games\",\n                \"account\": \"GameState\"\n              }\n            ]\n          }\n        },\n        {\n          \"name\": \"system_program\",\n          \"address\": \"11111111111111111111111111111111\"\n        }\n      ],\n      \"args\": [\n        {\n          \"name\": \"amount\",\n          \"type\": \"u64\"\n        },\n        {\n          \"name\": \"choice\",\n          \"type\": \"u8\"\n        }\n      ]\n    },\n    {\n      \"name\": \"withdraw\",\n      \"discriminator\": [\n        183,\n        18,\n        70,\n        156,\n        148,\n        109,\n        161,\n        34\n      ],\n      \"accounts\": [\n        {\n          \"name\": \"owner\",\n          \"writable\": true,\n          \"signer\": true,\n          \"relations\": [\n            \"game_state\"\n          ]\n        },\n        {\n          \"name\": \"game_state\",\n          \"writable\": true,\n          \"pda\": {\n            \"seeds\": [\n              {\n                \"kind\": \"const\",\n                \"value\": [\n                  103,\n                  97,\n                  109,\n                  101,\n                  115,\n                  116,\n                  97,\n                  116,\n                  101\n                ]\n              },\n              {\n                \"kind\": \"account\",\n                \"path\": \"owner\"\n              }\n            ]\n          }\n        },\n        {\n          \"name\": \"system_program\",\n          \"address\": \"11111111111111111111111111111111\"\n        }\n      ],\n      \"args\": [\n        {\n          \"name\": \"amount\",\n          \"type\": \"u64\"\n        }\n      ]\n    }\n  ],\n  \"accounts\": [\n    {\n      \"name\": \"BetAccount\",\n      \"discriminator\": [\n        117,\n        187,\n        165,\n        174,\n        194,\n        28,\n        119,\n        76\n      ]\n    },\n    {\n      \"name\": \"GameState\",\n      \"discriminator\": [\n        144,\n        94,\n        208,\n        172,\n        248,\n        99,\n        134,\n        120\n      ]\n    }\n  ],\n  \"errors\": [\n    {\n      \"code\": 6000,\n      \"name\": \"UnautharisedOwner\",\n      \"msg\": \"Invalid owner\"\n    },\n    {\n      \"code\": 6001,\n      \"name\": \"InvalidChoice\",\n      \"msg\": \"Choice must be 0 or 1\"\n    },\n    {\n      \"code\": 6002,\n      \"name\": \"InvalidAmount\",\n      \"msg\": \"Amount exceeds the total amount in the vault\"\n    }\n  ],\n  \"types\": [\n    {\n      \"name\": \"BetAccount\",\n      \"type\": {\n        \"kind\": \"struct\",\n        \"fields\": [\n          {\n            \"name\": \"user\",\n            \"type\": \"pubkey\"\n          },\n          {\n            \"name\": \"amount\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"choice\",\n            \"type\": \"u8\"\n          },\n          {\n            \"name\": \"won\",\n            \"type\": \"bool\"\n          },\n          {\n            \"name\": \"settled\",\n            \"type\": \"bool\"\n          }\n        ]\n      }\n    },\n    {\n      \"name\": \"GameState\",\n      \"type\": {\n        \"kind\": \"struct\",\n        \"fields\": [\n          {\n            \"name\": \"owner\",\n            \"type\": \"pubkey\"\n          },\n          {\n            \"name\": \"total_amount\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"fee_percentage\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"total_games\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"bump\",\n            \"type\": \"u8\"\n          }\n        ]\n      }\n    }\n  ]\n} as const\n\n// Your program ID from the IDL\nexport const PROGRAM_ID = \"CK9rjq6oyLK8uJBkzkg3CBPW4ydBdKM5khQQUigFuqng\""],"names":[],"mappings":"AAAA,iBAAiB;;;;;AAEV,MAAM,MAAM;IACjB,WAAW;IACX,YAAY;QACV,QAAQ;QACR,WAAW;QACX,QAAQ;QACR,eAAe;IACjB;IACA,gBAAgB;QACd;YACE,QAAQ;YACR,iBAAiB;gBACf;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;aACD;YACD,YAAY;gBACV;oBACE,QAAQ;oBACR,YAAY;oBACZ,UAAU;oBACV,aAAa;wBACX;qBACD;gBACH;gBACA;oBACE,QAAQ;oBACR,YAAY;oBACZ,OAAO;wBACL,SAAS;4BACP;gCACE,QAAQ;gCACR,SAAS;oCACP;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;iCACD;4BACH;4BACA;gCACE,QAAQ;gCACR,QAAQ;4BACV;yBACD;oBACH;gBACF;gBACA;oBACE,QAAQ;oBACR,WAAW;gBACb;aACD;YACD,QAAQ;gBACN;oBACE,QAAQ;oBACR,QAAQ;gBACV;aACD;QACH;QACA;YACE,QAAQ;YACR,iBAAiB;gBACf;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;aACD;YACD,YAAY;gBACV;oBACE,QAAQ;oBACR,YAAY;oBACZ,UAAU;gBACZ;gBACA;oBACE,QAAQ;oBACR,YAAY;oBACZ,OAAO;wBACL,SAAS;4BACP;gCACE,QAAQ;gCACR,SAAS;oCACP;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;iCACD;4BACH;4BACA;gCACE,QAAQ;gCACR,QAAQ;4BACV;yBACD;oBACH;gBACF;gBACA;oBACE,QAAQ;oBACR,WAAW;gBACb;aACD;YACD,QAAQ;gBACN;oBACE,QAAQ;oBACR,QAAQ;gBACV;aACD;QACH;QACA;YACE,QAAQ;YACR,iBAAiB;gBACf;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;aACD;YACD,YAAY;gBACV;oBACE,QAAQ;oBACR,YAAY;oBACZ,UAAU;gBACZ;gBACA;oBACE,QAAQ;oBACR,aAAa;wBACX;qBACD;gBACH;gBACA;oBACE,QAAQ;oBACR,YAAY;oBACZ,OAAO;wBACL,SAAS;4BACP;gCACE,QAAQ;gCACR,SAAS;oCACP;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;iCACD;4BACH;4BACA;gCACE,QAAQ;gCACR,QAAQ;4BACV;yBACD;oBACH;gBACF;gBACA;oBACE,QAAQ;oBACR,YAAY;oBACZ,OAAO;wBACL,SAAS;4BACP;gCACE,QAAQ;gCACR,SAAS;oCACP;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;iCACD;4BACH;4BACA;gCACE,QAAQ;gCACR,QAAQ;4BACV;4BACA;gCACE,QAAQ;gCACR,QAAQ;gCACR,WAAW;4BACb;yBACD;oBACH;gBACF;gBACA;oBACE,QAAQ;oBACR,WAAW;gBACb;aACD;YACD,QAAQ;gBACN;oBACE,QAAQ;oBACR,QAAQ;gBACV;gBACA;oBACE,QAAQ;oBACR,QAAQ;gBACV;aACD;QACH;QACA;YACE,QAAQ;YACR,iBAAiB;gBACf;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;aACD;YACD,YAAY;gBACV;oBACE,QAAQ;oBACR,YAAY;oBACZ,UAAU;oBACV,aAAa;wBACX;qBACD;gBACH;gBACA;oBACE,QAAQ;oBACR,YAAY;oBACZ,OAAO;wBACL,SAAS;4BACP;gCACE,QAAQ;gCACR,SAAS;oCACP;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;iCACD;4BACH;4BACA;gCACE,QAAQ;gCACR,QAAQ;4BACV;yBACD;oBACH;gBACF;gBACA;oBACE,QAAQ;oBACR,WAAW;gBACb;aACD;YACD,QAAQ;gBACN;oBACE,QAAQ;oBACR,QAAQ;gBACV;aACD;QACH;KACD;IACD,YAAY;QACV;YACE,QAAQ;YACR,iBAAiB;gBACf;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;aACD;QACH;QACA;YACE,QAAQ;YACR,iBAAiB;gBACf;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;aACD;QACH;KACD;IACD,UAAU;QACR;YACE,QAAQ;YACR,QAAQ;YACR,OAAO;QACT;QACA;YACE,QAAQ;YACR,QAAQ;YACR,OAAO;QACT;QACA;YACE,QAAQ;YACR,QAAQ;YACR,OAAO;QACT;KACD;IACD,SAAS;QACP;YACE,QAAQ;YACR,QAAQ;gBACN,QAAQ;gBACR,UAAU;oBACR;wBACE,QAAQ;wBACR,QAAQ;oBACV;oBACA;wBACE,QAAQ;wBACR,QAAQ;oBACV;oBACA;wBACE,QAAQ;wBACR,QAAQ;oBACV;oBACA;wBACE,QAAQ;wBACR,QAAQ;oBACV;oBACA;wBACE,QAAQ;wBACR,QAAQ;oBACV;iBACD;YACH;QACF;QACA;YACE,QAAQ;YACR,QAAQ;gBACN,QAAQ;gBACR,UAAU;oBACR;wBACE,QAAQ;wBACR,QAAQ;oBACV;oBACA;wBACE,QAAQ;wBACR,QAAQ;oBACV;oBACA;wBACE,QAAQ;wBACR,QAAQ;oBACV;oBACA;wBACE,QAAQ;wBACR,QAAQ;oBACV;oBACA;wBACE,QAAQ;wBACR,QAAQ;oBACV;iBACD;YACH;QACF;KACD;AACH;AAGO,MAAM,aAAa","debugId":null}},
    {"offset": {"line": 655, "column": 0}, "map": {"version":3,"sources":["file:///home/joe/bootcamp-temp/coin-flip-frontend/src/components/coin-flip/coin-flip-data-access.tsx"],"sourcesContent":["// src/components/coin-flip/coin-flip-data-access.tsx\n'use client'\n\nimport { Program, AnchorProvider } from '@coral-xyz/anchor'\nimport { useConnection } from '@solana/wallet-adapter-react'\nimport { Cluster, PublicKey, SystemProgram, LAMPORTS_PER_SOL } from '@solana/web3.js'\nimport { useMutation, useQuery } from '@tanstack/react-query'\nimport { useCallback, useMemo } from 'react'\nimport BN from 'bn.js'\nimport { useCluster } from '../cluster/cluster-data-access'\nimport { useAnchorProvider } from '../solana/solana-provider'\nimport { useTransactionToast } from '../use-transaction-toast'\nimport { toast } from 'sonner'\nimport { SendTransactionError } from '@solana/web3.js'\nimport { IDL, PROGRAM_ID } from '@/lib/idl'\nimport { Idl } from '@coral-xyz/anchor'\n\n// Define the types based on your IDL\ntype CoinFlipBackend = typeof IDL\n\n// Helper functions\nfunction getCoinFlipProgram(provider: AnchorProvider) {\n    \n  const programId = getCoinFlipProgramId();\n  return new Program(IDL, provider);\n}\n\n\nfunction getCoinFlipProgramId(): PublicKey {\n  return new PublicKey(PROGRAM_ID)\n}\n\n// Helper to get transaction logs for errors\nasync function getTransactionLogs(error: any, connection: any) {\n  if (error instanceof SendTransactionError) {\n    try {\n      return await error.getLogs(connection)\n    } catch {\n      return null\n    }\n  }\n  return error.logs || null\n}\n\ninterface InitializeArgs {\n  owner: PublicKey\n  fee_percentage: number\n}\n\ninterface DepositArgs {\n  owner: PublicKey\n  amount: number\n}\n\ninterface WithdrawArgs {\n  owner: PublicKey\n  amount: number\n}\n\nexport function useCoinFlipProgram() {\n  const { connection } = useConnection()\n  const { cluster } = useCluster()\n  const provider = useAnchorProvider()\n  const transactionToast = useTransactionToast()\n\n  const programId = useMemo(() => getCoinFlipProgramId(), [])\n  const program = useMemo(() => getCoinFlipProgram(provider), [provider])\n\n  const accounts = useQuery({\n    queryKey: ['coin_flip', 'all', { cluster }],\n    queryFn: () => (program.account as any).gameState.all(),\n  })\n\n  const getProgramAccount = useQuery({\n    queryKey: ['get-program-account', { cluster }],\n    queryFn: () => connection.getParsedAccountInfo(programId),\n  })\n\n  async function checkAccountBalances(accounts: Record<string, PublicKey>) {\n    const balances: Record<string, number> = {}\n    for (const [name, pubkey] of Object.entries(accounts)) {\n      try {\n        balances[name] = await connection.getBalance(pubkey)\n      } catch {\n        balances[name] = 0\n      }\n    }\n    return balances\n  }\n\n  const initialize = useMutation<string, Error, InitializeArgs>({\n    mutationKey: ['game_state', 'initialize', { cluster }],\n    mutationFn: async ({ owner, fee_percentage }) => {\n      const [gameState] = PublicKey.findProgramAddressSync(\n        [Buffer.from('gamestate'), owner.toBuffer()],\n        programId\n      )\n      await checkAccountBalances({ owner, gameState })\n\n      try {\n        return await (program.methods as any)\n          .initialize(new BN(fee_percentage))\n          .accounts({\n            owner,\n            gameState,\n            systemProgram: SystemProgram.programId,\n          })\n          .rpc()\n      } catch (error: any) {\n        await getTransactionLogs(error, connection)\n        throw error\n      }\n    },\n    onSuccess: (signature) => {\n      transactionToast(signature)\n      accounts.refetch()\n    },\n    onError: async (error) => {\n      await getTransactionLogs(error, connection)\n      toast.error(`Failed to initialize: ${error.message}`)\n    },\n  })\n\n  const deposit_to_gamestate = useMutation<string, Error, DepositArgs>({\n    mutationKey: ['game_state', 'deposit', { cluster }],\n    mutationFn: async ({ owner, amount }) => {\n      const [gameState] = PublicKey.findProgramAddressSync(\n        [Buffer.from('gamestate'), owner.toBuffer()],\n        programId\n      )\n      await checkAccountBalances({ owner, gameState })\n\n      try {\n        return await (program.methods as any)\n          .deposit(new BN(amount))\n          .accounts({ \n            owner, \n            gameState, \n            systemProgram: SystemProgram.programId \n          })\n          .rpc()\n      } catch (error: any) {\n        await getTransactionLogs(error, connection)\n        throw error\n      }\n    },\n    onSuccess: (signature) => {\n      transactionToast(signature)\n      accounts.refetch()\n    },\n    onError: async (error) => {\n      await getTransactionLogs(error, connection)\n      toast.error(`Failed to deposit: ${error.message}`)\n    },\n  })\n\n  const withdraw = useMutation<string, Error, WithdrawArgs>({\n    mutationKey: ['game_state', 'withdraw', { cluster }],\n    mutationFn: async ({ owner, amount }) => {\n      const [gameState] = PublicKey.findProgramAddressSync(\n        [Buffer.from('gamestate'), owner.toBuffer()],\n        programId\n      )\n      await checkAccountBalances({ owner, gameState })\n\n      try {\n        return await (program.methods as any)\n          .withdraw(new BN(amount))\n          .accounts({ \n            owner, \n            gameState, \n            systemProgram: SystemProgram.programId \n          })\n          .rpc()\n      } catch (error: any) {\n        await getTransactionLogs(error, connection)\n        throw error\n      }\n    },\n    onSuccess: (signature) => {\n      transactionToast(signature)\n      accounts.refetch()\n    },\n    onError: async (error) => {\n      await getTransactionLogs(error, connection)\n      toast.error(`Failed to withdraw: ${error.message}`)\n    },\n  })\n\n  return {\n    program,\n    programId,\n    accounts,\n    getProgramAccount,\n    initialize,\n    deposit_to_gamestate,\n    withdraw,\n  }\n}\n\nexport function useCoinFlipProgramAccount({\n  user,\n  owner,\n  gameNumber\n}: {\n  user: PublicKey\n  owner: PublicKey\n  gameNumber?: number\n}) {\n  const { connection } = useConnection()\n  const { cluster } = useCluster()\n  const transactionToast = useTransactionToast()\n  const { program } = useCoinFlipProgram()\n\n  const gameStateQuery = useQuery({\n    queryKey: ['game_state', 'fetch', { cluster, owner: owner.toString() }],\n    queryFn: async () => {\n      if (owner.equals(new PublicKey('11111111111111111111111111111111'))) {\n        throw new Error('Invalid owner')\n      }\n      const [gameState] = PublicKey.findProgramAddressSync(\n        [Buffer.from('gamestate'), owner.toBuffer()],\n        (program as any).programId\n      )\n      return await (program.account as any).gameState.fetch(gameState)\n    },\n    enabled: !!program && !!owner && !owner.equals(new PublicKey('11111111111111111111111111111111')),\n  })\n\n  // Use the current totalGames count (which will be the game number for the next bet)\n  const currentGameNumber = useMemo(() => \n    gameNumber !== undefined ? gameNumber : (gameStateQuery.data?.totalGames?.toNumber() || 0), \n    [gameNumber, gameStateQuery.data?.totalGames]\n  )\n\n  const [gameState] = useMemo(() => PublicKey.findProgramAddressSync(\n    [Buffer.from('gamestate'), owner.toBuffer()],\n    (program as any).programId\n  ), [owner, program])\n\n  // IMPORTANT: Based on your IDL, the bet_account PDA uses game_state.total_games directly\n  // This means we need to use the current total_games value from the game state\n  const [betAccount] = useMemo(() => {\n    // According to your IDL, the seed is the current total_games value from game_state\n    // This is automatically handled by Anchor, but for manual derivation:\n    const gameNumber = gameStateQuery.data?.totalGames?.toNumber() || 0\n    const gameNumberBuf = new BN(gameNumber).toArrayLike(Buffer, 'le', 8)\n    return PublicKey.findProgramAddressSync(\n      [Buffer.from('bet_account'), user.toBuffer(), gameNumberBuf],\n      (program as any).programId\n    )\n  }, [user, gameStateQuery.data?.totalGames, program])\n\n  async function checkAllBalances() {\n    const accounts = { user, owner, gameState, betAccount }\n    const balances: Record<string, number> = {}\n    for (const [name, pubkey] of Object.entries(accounts)) {\n      try {\n        balances[name] = await connection.getBalance(pubkey)\n      } catch {\n        balances[name] = 0\n      }\n    }\n    return balances\n  }\n\n  const placeBet = useMutation<string, Error, { amount: number; choice: number }>({\n    mutationKey: ['bet_account', 'place_bet', { cluster, betAccount: betAccount.toString() }],\n    mutationFn: async ({ amount, choice }) => {\n      if (![0, 1].includes(choice)) throw new Error('Choice must be 0 or 1')\n      if (user.equals(new PublicKey('11111111111111111111111111111111'))) throw new Error('Invalid user public key')\n      if (owner.equals(new PublicKey('11111111111111111111111111111111'))) throw new Error('Invalid owner public key')\n\n      await checkAllBalances()\n\n      // Fetch fresh game state data right before transaction\n      const gameStateData = await (program.account as any).gameState.fetch(gameState)\n       \n      // Calculate expected winnings\n      const payout = amount * 2\n      const fee = Math.floor((payout * gameStateData.feePercentage.toNumber()) / 100)\n      const userWinnings = payout - fee\n\n      // Check if game state has enough funds\n      if (userWinnings > gameStateData.totalAmount.toNumber()) {\n        throw new Error(`Insufficient funds in game state. Available: ${gameStateData.totalAmount.toString()}, Required: ${userWinnings}`)\n      }\n\n      // Use snake_case method name as per your IDL\n      return await (program.methods as any)\n        .placeBet(new BN(amount), choice)\n        .accounts({\n          user,\n          owner,\n          gameState,\n          // betAccount is automatically derived by Anchor based on the PDA seeds in IDL\n          systemProgram: SystemProgram.programId,\n        })\n        .rpc()\n    },\n    onSuccess: async (signature) => {\n      transactionToast(signature)\n      await gameStateQuery.refetch()\n    },\n    onError: async (error) => {\n      await getTransactionLogs(error, connection)\n      toast.error(`Failed to place bet: ${error.message}`)\n    },\n  })\n\n  // Query should handle the case where bet account might not exist\n  const accountQuery = useQuery({\n    queryKey: ['bet_account', 'fetch', { cluster, betAccount: betAccount.toString(), gameNumber: currentGameNumber }],\n    queryFn: async () => {\n      try {\n        return await (program.account as any).betAccount.fetch(betAccount)\n      } catch (error: any) {\n        // Return null if account doesn't exist instead of undefined\n        if (error.message?.includes('Account does not exist')) {\n          return null\n        }\n        throw error\n      }\n    },\n    enabled: !!program && !!betAccount && !!gameStateQuery.data,\n    retry: false, // Don't retry on account not found\n  })\n\n  return {\n    placeBet,\n    currentGameNumber,\n    gameStateData: gameStateQuery.data,\n    gameState,\n    betAccount,\n    accountQuery,\n    checkAllBalances,\n  }\n}"],"names":[],"mappings":"AAAA,qDAAqD;;;;;AA8F5C;AA3FT;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAbA;;;;;;;;;;;;;AAmBA,mBAAmB;AACnB,SAAS,mBAAmB,QAAwB;IAElD,MAAM,YAAY;IAClB,OAAO,IAAI,uLAAA,CAAA,UAAO,CAAC,oHAAA,CAAA,MAAG,EAAE;AAC1B;AAGA,SAAS;IACP,OAAO,IAAI,2KAAA,CAAA,YAAS,CAAC,oHAAA,CAAA,aAAU;AACjC;AAEA,4CAA4C;AAC5C,eAAe,mBAAmB,KAAU,EAAE,UAAe;IAC3D,IAAI,iBAAiB,2KAAA,CAAA,uBAAoB,EAAE;QACzC,IAAI;YACF,OAAO,MAAM,MAAM,OAAO,CAAC;QAC7B,EAAE,UAAM;YACN,OAAO;QACT;IACF;IACA,OAAO,MAAM,IAAI,IAAI;AACvB;AAiBO,SAAS;;IACd,MAAM,EAAE,UAAU,EAAE,GAAG,CAAA,GAAA,wLAAA,CAAA,gBAAa,AAAD;IACnC,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD;IAC7B,MAAM,WAAW,CAAA,GAAA,qJAAA,CAAA,oBAAiB,AAAD;IACjC,MAAM,mBAAmB,CAAA,GAAA,oJAAA,CAAA,sBAAmB,AAAD;IAE3C,MAAM,YAAY,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD;iDAAE,IAAM;gDAAwB,EAAE;IAC1D,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD;+CAAE,IAAM,mBAAmB;8CAAW;QAAC;KAAS;IAEtE,MAAM,WAAW,CAAA,GAAA,8KAAA,CAAA,WAAQ,AAAD,EAAE;QACxB,UAAU;YAAC;YAAa;YAAO;gBAAE;YAAQ;SAAE;QAC3C,OAAO;qDAAE,IAAM,AAAC,QAAQ,OAAO,CAAS,SAAS,CAAC,GAAG;;IACvD;IAEA,MAAM,oBAAoB,CAAA,GAAA,8KAAA,CAAA,WAAQ,AAAD,EAAE;QACjC,UAAU;YAAC;YAAuB;gBAAE;YAAQ;SAAE;QAC9C,OAAO;8DAAE,IAAM,WAAW,oBAAoB,CAAC;;IACjD;IAEA,eAAe,qBAAqB,QAAmC;QACrE,MAAM,WAAmC,CAAC;QAC1C,KAAK,MAAM,CAAC,MAAM,OAAO,IAAI,OAAO,OAAO,CAAC,UAAW;YACrD,IAAI;gBACF,QAAQ,CAAC,KAAK,GAAG,MAAM,WAAW,UAAU,CAAC;YAC/C,EAAE,UAAM;gBACN,QAAQ,CAAC,KAAK,GAAG;YACnB;QACF;QACA,OAAO;IACT;IAEA,MAAM,aAAa,CAAA,GAAA,iLAAA,CAAA,cAAW,AAAD,EAAiC;QAC5D,aAAa;YAAC;YAAc;YAAc;gBAAE;YAAQ;SAAE;QACtD,UAAU;0DAAE;oBAAO,EAAE,KAAK,EAAE,cAAc,EAAE;gBAC1C,MAAM,CAAC,UAAU,GAAG,2KAAA,CAAA,YAAS,CAAC,sBAAsB,CAClD;oBAAC,8JAAA,CAAA,SAAM,CAAC,IAAI,CAAC;oBAAc,MAAM,QAAQ;iBAAG,EAC5C;gBAEF,MAAM,qBAAqB;oBAAE;oBAAO;gBAAU;gBAE9C,IAAI;oBACF,OAAO,MAAM,AAAC,QAAQ,OAAO,CAC1B,UAAU,CAAC,IAAI,wIAAA,CAAA,UAAE,CAAC,iBAClB,QAAQ,CAAC;wBACR;wBACA;wBACA,eAAe,2KAAA,CAAA,gBAAa,CAAC,SAAS;oBACxC,GACC,GAAG;gBACR,EAAE,OAAO,OAAY;oBACnB,MAAM,mBAAmB,OAAO;oBAChC,MAAM;gBACR;YACF;;QACA,SAAS;0DAAE,CAAC;gBACV,iBAAiB;gBACjB,SAAS,OAAO;YAClB;;QACA,OAAO;0DAAE,OAAO;gBACd,MAAM,mBAAmB,OAAO;gBAChC,2IAAA,CAAA,QAAK,CAAC,KAAK,CAAC,AAAC,yBAAsC,OAAd,MAAM,OAAO;YACpD;;IACF;IAEA,MAAM,uBAAuB,CAAA,GAAA,iLAAA,CAAA,cAAW,AAAD,EAA8B;QACnE,aAAa;YAAC;YAAc;YAAW;gBAAE;YAAQ;SAAE;QACnD,UAAU;oEAAE;oBAAO,EAAE,KAAK,EAAE,MAAM,EAAE;gBAClC,MAAM,CAAC,UAAU,GAAG,2KAAA,CAAA,YAAS,CAAC,sBAAsB,CAClD;oBAAC,8JAAA,CAAA,SAAM,CAAC,IAAI,CAAC;oBAAc,MAAM,QAAQ;iBAAG,EAC5C;gBAEF,MAAM,qBAAqB;oBAAE;oBAAO;gBAAU;gBAE9C,IAAI;oBACF,OAAO,MAAM,AAAC,QAAQ,OAAO,CAC1B,OAAO,CAAC,IAAI,wIAAA,CAAA,UAAE,CAAC,SACf,QAAQ,CAAC;wBACR;wBACA;wBACA,eAAe,2KAAA,CAAA,gBAAa,CAAC,SAAS;oBACxC,GACC,GAAG;gBACR,EAAE,OAAO,OAAY;oBACnB,MAAM,mBAAmB,OAAO;oBAChC,MAAM;gBACR;YACF;;QACA,SAAS;oEAAE,CAAC;gBACV,iBAAiB;gBACjB,SAAS,OAAO;YAClB;;QACA,OAAO;oEAAE,OAAO;gBACd,MAAM,mBAAmB,OAAO;gBAChC,2IAAA,CAAA,QAAK,CAAC,KAAK,CAAC,AAAC,sBAAmC,OAAd,MAAM,OAAO;YACjD;;IACF;IAEA,MAAM,WAAW,CAAA,GAAA,iLAAA,CAAA,cAAW,AAAD,EAA+B;QACxD,aAAa;YAAC;YAAc;YAAY;gBAAE;YAAQ;SAAE;QACpD,UAAU;wDAAE;oBAAO,EAAE,KAAK,EAAE,MAAM,EAAE;gBAClC,MAAM,CAAC,UAAU,GAAG,2KAAA,CAAA,YAAS,CAAC,sBAAsB,CAClD;oBAAC,8JAAA,CAAA,SAAM,CAAC,IAAI,CAAC;oBAAc,MAAM,QAAQ;iBAAG,EAC5C;gBAEF,MAAM,qBAAqB;oBAAE;oBAAO;gBAAU;gBAE9C,IAAI;oBACF,OAAO,MAAM,AAAC,QAAQ,OAAO,CAC1B,QAAQ,CAAC,IAAI,wIAAA,CAAA,UAAE,CAAC,SAChB,QAAQ,CAAC;wBACR;wBACA;wBACA,eAAe,2KAAA,CAAA,gBAAa,CAAC,SAAS;oBACxC,GACC,GAAG;gBACR,EAAE,OAAO,OAAY;oBACnB,MAAM,mBAAmB,OAAO;oBAChC,MAAM;gBACR;YACF;;QACA,SAAS;wDAAE,CAAC;gBACV,iBAAiB;gBACjB,SAAS,OAAO;YAClB;;QACA,OAAO;wDAAE,OAAO;gBACd,MAAM,mBAAmB,OAAO;gBAChC,2IAAA,CAAA,QAAK,CAAC,KAAK,CAAC,AAAC,uBAAoC,OAAd,MAAM,OAAO;YAClD;;IACF;IAEA,OAAO;QACL;QACA;QACA;QACA;QACA;QACA;QACA;IACF;AACF;GA3IgB;;QACS,wLAAA,CAAA,gBAAa;QAChB,6JAAA,CAAA,aAAU;QACb,qJAAA,CAAA,oBAAiB;QACT,oJAAA,CAAA,sBAAmB;QAK3B,8KAAA,CAAA,WAAQ;QAKC,8KAAA,CAAA,WAAQ;QAiBf,iLAAA,CAAA,cAAW;QAiCD,iLAAA,CAAA,cAAW;QAiCvB,iLAAA,CAAA,cAAW;;;AA4CvB,SAAS,0BAA0B,KAQzC;QARyC,EACxC,IAAI,EACJ,KAAK,EACL,UAAU,EAKX,GARyC;QAgCzB,sBAmBL;;IA1CV,MAAM,EAAE,UAAU,EAAE,GAAG,CAAA,GAAA,wLAAA,CAAA,gBAAa,AAAD;IACnC,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD;IAC7B,MAAM,mBAAmB,CAAA,GAAA,oJAAA,CAAA,sBAAmB,AAAD;IAC3C,MAAM,EAAE,OAAO,EAAE,GAAG;IAEpB,MAAM,iBAAiB,CAAA,GAAA,8KAAA,CAAA,WAAQ,AAAD,EAAE;QAC9B,UAAU;YAAC;YAAc;YAAS;gBAAE;gBAAS,OAAO,MAAM,QAAQ;YAAG;SAAE;QACvE,OAAO;kEAAE;gBACP,IAAI,MAAM,MAAM,CAAC,IAAI,2KAAA,CAAA,YAAS,CAAC,sCAAsC;oBACnE,MAAM,IAAI,MAAM;gBAClB;gBACA,MAAM,CAAC,UAAU,GAAG,2KAAA,CAAA,YAAS,CAAC,sBAAsB,CAClD;oBAAC,8JAAA,CAAA,SAAM,CAAC,IAAI,CAAC;oBAAc,MAAM,QAAQ;iBAAG,EAC5C,AAAC,QAAgB,SAAS;gBAE5B,OAAO,MAAM,AAAC,QAAQ,OAAO,CAAS,SAAS,CAAC,KAAK,CAAC;YACxD;;QACA,SAAS,CAAC,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,MAAM,MAAM,CAAC,IAAI,2KAAA,CAAA,YAAS,CAAC;IAC/D;IAEA,oFAAoF;IACpF,MAAM,oBAAoB,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD;gEAAE;gBACS,iCAAA;mBAAzC,eAAe,YAAY,aAAc,EAAA,uBAAA,eAAe,IAAI,cAAnB,4CAAA,kCAAA,qBAAqB,UAAU,cAA/B,sDAAA,gCAAiC,QAAQ,OAAM;;+DACxF;QAAC;SAAY,uBAAA,eAAe,IAAI,cAAnB,2CAAA,qBAAqB,UAAU;KAAC;IAG/C,MAAM,CAAC,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD;6CAAE,IAAM,2KAAA,CAAA,YAAS,CAAC,sBAAsB,CAChE;gBAAC,8JAAA,CAAA,SAAM,CAAC,IAAI,CAAC;gBAAc,MAAM,QAAQ;aAAG,EAC5C,AAAC,QAAgB,SAAS;4CACzB;QAAC;QAAO;KAAQ;IAEnB,yFAAyF;IACzF,8EAA8E;IAC9E,MAAM,CAAC,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD;6CAAE;gBAGR,iCAAA;YAFnB,mFAAmF;YACnF,sEAAsE;YACtE,MAAM,aAAa,EAAA,uBAAA,eAAe,IAAI,cAAnB,4CAAA,kCAAA,qBAAqB,UAAU,cAA/B,sDAAA,gCAAiC,QAAQ,OAAM;YAClE,MAAM,gBAAgB,IAAI,wIAAA,CAAA,UAAE,CAAC,YAAY,WAAW,CAAC,8JAAA,CAAA,SAAM,EAAE,MAAM;YACnE,OAAO,2KAAA,CAAA,YAAS,CAAC,sBAAsB,CACrC;gBAAC,8JAAA,CAAA,SAAM,CAAC,IAAI,CAAC;gBAAgB,KAAK,QAAQ;gBAAI;aAAc,EAC5D,AAAC,QAAgB,SAAS;QAE9B;4CAAG;QAAC;SAAM,wBAAA,eAAe,IAAI,cAAnB,4CAAA,sBAAqB,UAAU;QAAE;KAAQ;IAEnD,eAAe;QACb,MAAM,WAAW;YAAE;YAAM;YAAO;YAAW;QAAW;QACtD,MAAM,WAAmC,CAAC;QAC1C,KAAK,MAAM,CAAC,MAAM,OAAO,IAAI,OAAO,OAAO,CAAC,UAAW;YACrD,IAAI;gBACF,QAAQ,CAAC,KAAK,GAAG,MAAM,WAAW,UAAU,CAAC;YAC/C,EAAE,UAAM;gBACN,QAAQ,CAAC,KAAK,GAAG;YACnB;QACF;QACA,OAAO;IACT;IAEA,MAAM,WAAW,CAAA,GAAA,iLAAA,CAAA,cAAW,AAAD,EAAqD;QAC9E,aAAa;YAAC;YAAe;YAAa;gBAAE;gBAAS,YAAY,WAAW,QAAQ;YAAG;SAAE;QACzF,UAAU;+DAAE;oBAAO,EAAE,MAAM,EAAE,MAAM,EAAE;gBACnC,IAAI,CAAC;oBAAC;oBAAG;iBAAE,CAAC,QAAQ,CAAC,SAAS,MAAM,IAAI,MAAM;gBAC9C,IAAI,KAAK,MAAM,CAAC,IAAI,2KAAA,CAAA,YAAS,CAAC,sCAAsC,MAAM,IAAI,MAAM;gBACpF,IAAI,MAAM,MAAM,CAAC,IAAI,2KAAA,CAAA,YAAS,CAAC,sCAAsC,MAAM,IAAI,MAAM;gBAErF,MAAM;gBAEN,uDAAuD;gBACvD,MAAM,gBAAgB,MAAM,AAAC,QAAQ,OAAO,CAAS,SAAS,CAAC,KAAK,CAAC;gBAErE,8BAA8B;gBAC9B,MAAM,SAAS,SAAS;gBACxB,MAAM,MAAM,KAAK,KAAK,CAAC,AAAC,SAAS,cAAc,aAAa,CAAC,QAAQ,KAAM;gBAC3E,MAAM,eAAe,SAAS;gBAE9B,uCAAuC;gBACvC,IAAI,eAAe,cAAc,WAAW,CAAC,QAAQ,IAAI;oBACvD,MAAM,IAAI,MAAM,AAAC,gDAAkG,OAAnD,cAAc,WAAW,CAAC,QAAQ,IAAG,gBAA2B,OAAb;gBACrH;gBAEA,6CAA6C;gBAC7C,OAAO,MAAM,AAAC,QAAQ,OAAO,CAC1B,QAAQ,CAAC,IAAI,wIAAA,CAAA,UAAE,CAAC,SAAS,QACzB,QAAQ,CAAC;oBACR;oBACA;oBACA;oBACA,8EAA8E;oBAC9E,eAAe,2KAAA,CAAA,gBAAa,CAAC,SAAS;gBACxC,GACC,GAAG;YACR;;QACA,SAAS;+DAAE,OAAO;gBAChB,iBAAiB;gBACjB,MAAM,eAAe,OAAO;YAC9B;;QACA,OAAO;+DAAE,OAAO;gBACd,MAAM,mBAAmB,OAAO;gBAChC,2IAAA,CAAA,QAAK,CAAC,KAAK,CAAC,AAAC,wBAAqC,OAAd,MAAM,OAAO;YACnD;;IACF;IAEA,iEAAiE;IACjE,MAAM,eAAe,CAAA,GAAA,8KAAA,CAAA,WAAQ,AAAD,EAAE;QAC5B,UAAU;YAAC;YAAe;YAAS;gBAAE;gBAAS,YAAY,WAAW,QAAQ;gBAAI,YAAY;YAAkB;SAAE;QACjH,OAAO;gEAAE;gBACP,IAAI;oBACF,OAAO,MAAM,AAAC,QAAQ,OAAO,CAAS,UAAU,CAAC,KAAK,CAAC;gBACzD,EAAE,OAAO,OAAY;wBAEf;oBADJ,4DAA4D;oBAC5D,KAAI,iBAAA,MAAM,OAAO,cAAb,qCAAA,eAAe,QAAQ,CAAC,2BAA2B;wBACrD,OAAO;oBACT;oBACA,MAAM;gBACR;YACF;;QACA,SAAS,CAAC,CAAC,WAAW,CAAC,CAAC,cAAc,CAAC,CAAC,eAAe,IAAI;QAC3D,OAAO;IACT;IAEA,OAAO;QACL;QACA;QACA,eAAe,eAAe,IAAI;QAClC;QACA;QACA;QACA;IACF;AACF;IAzIgB;;QASS,wLAAA,CAAA,gBAAa;QAChB,6JAAA,CAAA,aAAU;QACL,oJAAA,CAAA,sBAAmB;QACxB;QAEG,8KAAA,CAAA,WAAQ;QAoDd,iLAAA,CAAA,cAAW;QA6CP,8KAAA,CAAA,WAAQ","debugId":null}},
    {"offset": {"line": 1107, "column": 0}, "map": {"version":3,"sources":["file:///home/joe/bootcamp-temp/coin-flip-frontend/src/lib/utils.ts"],"sourcesContent":["import { clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: (string | undefined)[]) {\n  return twMerge(clsx(inputs))\n}\n\nexport function ellipsify(str = '', len = 4) {\n  if (str.length > 30) {\n    return str.substring(0, len) + '..' + str.substring(str.length - len, str.length)\n  }\n  return str\n}"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,SAAS;IAAG,IAAA,IAAA,OAAA,UAAA,QAAA,AAAG,SAAH,UAAA,OAAA,OAAA,GAAA,OAAA,MAAA;QAAG,OAAH,QAAA,SAAA,CAAA,KAAiC;;IAClD,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB;AAEO,SAAS;QAAU,MAAA,iEAAM,IAAI,MAAA,iEAAM;IACxC,IAAI,IAAI,MAAM,GAAG,IAAI;QACnB,OAAO,IAAI,SAAS,CAAC,GAAG,OAAO,OAAO,IAAI,SAAS,CAAC,IAAI,MAAM,GAAG,KAAK,IAAI,MAAM;IAClF;IACA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 1137, "column": 0}, "map": {"version":3,"sources":["file:///home/joe/bootcamp-temp/coin-flip-frontend/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,KASb;QATa,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF,GATa;IAUd,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 1201, "column": 0}, "map": {"version":3,"sources":["file:///home/joe/bootcamp-temp/coin-flip-frontend/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IACZ,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IAClB,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IACjB,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IACvB,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IAClB,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IACnB,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IAClB,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 1323, "column": 0}, "map": {"version":3,"sources":["file:///home/joe/bootcamp-temp/coin-flip-frontend/src/components/coin-flip/coin-flip-ui.tsx"],"sourcesContent":["'use client'\n\nimport { PublicKey } from '@solana/web3.js'\nimport { useMemo, useState, useEffect } from 'react'\nimport { ExplorerLink } from '../cluster/cluster-ui'\nimport { useCoinFlipProgram, useCoinFlipProgramAccount } from './coin-flip-data-access'\nimport { ellipsify } from '@/lib/utils'\nimport { Button } from '@/components/ui/button'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '../ui/card'\nimport { useWallet } from '@solana/wallet-adapter-react'\nimport { Coins, Settings, DollarSign } from 'lucide-react'\nimport BN from 'bn.js'\n\nconst LAMPORTS_PER_SOL = 1_000_000_000\n\nexport function CoinFlipCreate() {\n  const { initialize, accounts } = useCoinFlipProgram()\n  const wallet = useWallet()\n  const [feePercentage, setFeePercentage] = useState(5)\n\n  const existingGameState = useMemo(() => {\n    if (!wallet.publicKey || !accounts.data) return null\n    return accounts.data.find((account: any) => account.account.owner.equals(wallet.publicKey!))\n  }, [accounts.data, wallet.publicKey])\n\n  const handleInitialize = () => {\n    if (!wallet.publicKey || existingGameState) return\n    initialize.mutateAsync({ owner: wallet.publicKey, fee_percentage: feePercentage })\n  }\n\n  return (\n    <Card className=\"mb-6\">\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          <Settings className=\"h-5 w-5\" />\n          Create Game State\n        </CardTitle>\n        <CardDescription>Initialize a new game state to start the coin flip game</CardDescription>\n      </CardHeader>\n      <CardContent>\n        <div className=\"space-y-4\">\n          <div className=\"flex items-center gap-4\">\n            <label className=\"text-sm font-medium text-gray-700\">House Fee:</label>\n            <input\n              type=\"number\"\n              min={0}\n              max={100}\n              value={feePercentage}\n              onChange={(e) => setFeePercentage(Number(e.target.value))}\n              className=\"w-20 px-3 py-2 border rounded-md\"\n            />\n            <span className=\"text-sm\">%</span>\n          </div>\n          \n          <Button \n            onClick={handleInitialize} \n            disabled={initialize.isPending || !!existingGameState}\n            className=\"w-full\"\n          >\n            {initialize.isPending ? 'Initializing...' : \n             existingGameState ? 'Game State Already Exists' : \n             'Initialize Game State'}\n          </Button>\n        </div>\n      </CardContent>\n    </Card>\n  )\n}\n\nexport function CoinFlipList() {\n  const { accounts, getProgramAccount } = useCoinFlipProgram()\n\n  if (getProgramAccount.isLoading) {\n    return <div className=\"flex justify-center py-8\">Loading...</div>\n  }\n  \n  if (!getProgramAccount.data?.value) {\n    return (\n      <Card>\n        <CardContent className=\"pt-6\">\n          <div className=\"text-center py-8\">\n            <p>Program account not found. Make sure you have deployed the program.</p>\n          </div>\n        </CardContent>\n      </Card>\n    )\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {accounts.isLoading ? (\n        <div className=\"flex justify-center py-8\">Loading game states...</div>\n      ) : accounts.data?.length ? (\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {accounts.data?.map((account: any) => (\n            <CoinFlipCard key={account.publicKey.toString()} gameStatePubkey={account.publicKey} />\n          ))}\n        </div>\n      ) : (\n        <Card>\n          <CardContent className=\"pt-6\">\n            <div className=\"text-center py-8\">\n              <h2 className=\"text-xl font-bold mb-2\">No Game States</h2>\n              <p>Create one above to get started!</p>\n            </div>\n          </CardContent>\n        </Card>\n      )}\n    </div>\n  )\n}\n\nfunction CoinFlipCard({ gameStatePubkey }: { gameStatePubkey: PublicKey }) {\n  const wallet = useWallet()\n  const { deposit_to_gamestate, withdraw, accounts, program } = useCoinFlipProgram()\n  \n  const [vaultAmount, setVaultAmount] = useState<number>(0)\n  const [betChoice, setBetChoice] = useState<number>(0)\n  const [placeBetAmount, setPlaceBetAmount] = useState<number>(0)\n  const [betResult, setBetResult] = useState<null | 'won' | 'lost' | 'pending'>(null)\n\n  const gameStateData = useMemo(() => {\n    return accounts.data?.find((account: any) => account.publicKey.equals(gameStatePubkey))\n  }, [accounts.data, gameStatePubkey])\n\n  const betAccountQuery = useCoinFlipProgramAccount({\n    user: wallet.publicKey || new PublicKey('11111111111111111111111111111111'),\n    owner: gameStateData?.account?.owner || new PublicKey('11111111111111111111111111111111'),\n    gameNumber: gameStateData?.account?.totalGames?.toNumber()\n  })\n\n  const isOwner = wallet.publicKey && gameStateData?.account?.owner.equals(wallet.publicKey)\n\n  const potentialWinnings = useMemo(() => {\n    if (!placeBetAmount || !gameStateData?.account) return 0\n    const payout = placeBetAmount * 2\n    const fee = (payout * gameStateData.account.feePercentage.toNumber()) / 100\n    return payout - fee\n  }, [placeBetAmount, gameStateData?.account])\n\n  const existingBetInfo = useMemo(() => {\n    const betData = betAccountQuery.accountQuery.data\n    if (!betData?.settled) return null\n    \n    return {\n      amount: betData.amount.toNumber() / LAMPORTS_PER_SOL,\n      choice: betData.choice === 0 ? 'Heads' : 'Tails',\n      won: betData.won\n    }\n  }, [betAccountQuery.accountQuery.data])\n\n  // Reset form values after successful operations\n  useEffect(() => {\n    if (deposit_to_gamestate.isSuccess || withdraw.isSuccess) {\n      setVaultAmount(0)\n    }\n  }, [deposit_to_gamestate.isSuccess, withdraw.isSuccess])\n\n  useEffect(() => {\n    if (betAccountQuery.placeBet.isPending) {\n      setBetResult('pending')\n    }\n  }, [betAccountQuery.placeBet.isPending])\n\n  const handleVaultOperation = async (operation: 'deposit' | 'withdraw') => {\n    if (!wallet.publicKey || !vaultAmount || vaultAmount <= 0) return\n\n    const amountLamports = vaultAmount * LAMPORTS_PER_SOL\n    \n    try {\n      if (operation === 'deposit') {\n        await deposit_to_gamestate.mutateAsync({ owner: wallet.publicKey, amount: amountLamports })\n      } else {\n        await withdraw.mutateAsync({ owner: wallet.publicKey, amount: amountLamports })\n      }\n    } catch (error) {\n      console.error(`${operation} failed:`, error)\n    }\n  }\n\n  const checkBetResult = async (gameNumber: number) => {\n    if (!wallet.publicKey) return\n\n    const gameNumberBuf = new BN(gameNumber).toArrayLike(Buffer, 'le', 8)\n    const [correctBetAccount] = PublicKey.findProgramAddressSync(\n      [Buffer.from('bet_account'), wallet.publicKey.toBuffer(), gameNumberBuf],\n      (program as any).programId\n    )\n\n    let attempts = 0\n    const maxAttempts = 10\n\n    const attemptFetch = async () => {\n      attempts++\n      \n      try {\n        const betData = await (program.account as any).betAccount.fetch(correctBetAccount)\n        \n        if (betData?.settled) {\n          setBetResult(betData.won ? 'won' : 'lost')\n          setPlaceBetAmount(0)\n          accounts.refetch()\n          return\n        }\n        \n        if (attempts < maxAttempts) {\n          setTimeout(attemptFetch, 2000)\n        } else {\n          setBetResult(null)\n          setPlaceBetAmount(0)\n        }\n      } catch (error) {\n        if (attempts < maxAttempts) {\n          setTimeout(attemptFetch, 2000)\n        } else {\n          setBetResult(null)\n          setPlaceBetAmount(0)\n        }\n      }\n    }\n\n    setTimeout(attemptFetch, 3000)\n  }\n\n  const handlePlaceBet = async () => {\n    if (!wallet.publicKey || !gameStateData?.account?.owner || !placeBetAmount || placeBetAmount <= 0) {\n      return\n    }\n\n    setBetResult('pending')\n    const amountLamports = placeBetAmount * LAMPORTS_PER_SOL\n\n    try {\n      const gameNumberForBet = betAccountQuery.currentGameNumber\n      \n      await betAccountQuery.placeBet.mutateAsync({\n        amount: amountLamports,\n        choice: betChoice\n      })\n      \n      checkBetResult(gameNumberForBet)\n    } catch (error) {\n      console.error(\"Bet failed:\", error)\n      setBetResult(null)\n    }\n  }\n\n  if (!gameStateData?.account) {\n    return <div>Loading game state...</div>\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          <Coins className=\"h-5 w-5\" />\n          Game State\n        </CardTitle>\n        <CardDescription>\n          <ExplorerLink \n            path={`account/${gameStatePubkey}`} \n            label={ellipsify(gameStatePubkey.toString())}\n          />\n        </CardDescription>\n      </CardHeader>\n      \n      <CardContent className=\"space-y-4\">\n        {/* Game State Info */}\n        <div className=\"bg-blue-50 rounded-lg p-4 border\">\n          <div className=\"grid grid-cols-2 gap-4 text-sm\">\n            <div>\n              <span className=\"font-medium text-blue-700\">Total Games:</span>\n              <p className=\"font-semibold text-blue-900\">{gameStateData.account.totalGames.toString()}</p>\n            </div>\n            <div>\n              <span className=\"font-medium text-blue-700\">Vault Balance:</span>\n              <p className=\"font-semibold text-blue-900\">\n                {(gameStateData.account.totalAmount.toNumber() / LAMPORTS_PER_SOL).toFixed(4)} SOL\n              </p>\n            </div>\n            <div>\n              <span className=\"font-medium text-blue-700\">House Fee:</span>\n              <p className=\"font-semibold text-blue-900\">{gameStateData.account.feePercentage.toString()}%</p>\n            </div>\n            <div>\n              <span className=\"font-medium text-blue-700\">Owner:</span>\n              <p className=\"font-semibold text-blue-900\">{ellipsify(gameStateData.account.owner.toString())}</p>\n            </div>\n          </div>\n        </div>\n\n        {/* Previous Bet Result */}\n        {existingBetInfo && (\n          <div className={`rounded-lg p-4 border ${\n            existingBetInfo.won ? 'bg-green-50 border-green-200' : 'bg-red-50 border-red-200'\n          }`}>\n            <h4 className=\"font-semibold mb-2\">Your Last Bet</h4>\n            <div className=\"text-sm space-y-1\">\n              <p><span className=\"font-medium\">Amount:</span> {existingBetInfo.amount.toFixed(4)} SOL</p>\n              <p><span className=\"font-medium\">Choice:</span> {existingBetInfo.choice}</p>\n              <p className={`font-semibold ${existingBetInfo.won ? 'text-green-600' : 'text-red-600'}`}>\n                {existingBetInfo.won ? '🎉 You Won!' : '😢 You Lost'}\n              </p>\n            </div>\n          </div>\n        )}\n\n        {/* Vault Operations - Owner Only */}\n        {isOwner && (\n          <div className=\"bg-white rounded-lg p-4 border\">\n            <h4 className=\"font-semibold mb-3 flex items-center gap-2\">\n              <DollarSign className=\"h-4 w-4 text-green-600\" />\n              Vault Operations\n            </h4>\n            \n            <div className=\"space-y-3\">\n              <div className=\"flex items-center gap-2\">\n                <input\n                  type=\"number\"\n                  min={0}\n                  step={0.1}\n                  placeholder=\"Amount in SOL\"\n                  value={vaultAmount || ''}\n                  onChange={(e) => setVaultAmount(Number(e.target.value))}\n                  disabled={deposit_to_gamestate.isPending || withdraw.isPending}\n                  className=\"flex-1 px-3 py-2 border rounded-md text-gray-900\"\n                />\n                <span className=\"text-sm text-gray-700\">SOL</span>\n              </div>\n              \n              <div className=\"flex gap-2\">\n                <Button \n                  onClick={() => handleVaultOperation('deposit')} \n                  disabled={deposit_to_gamestate.isPending || withdraw.isPending || !vaultAmount}\n                  className=\"flex-1\"\n                >\n                  {deposit_to_gamestate.isPending ? 'Depositing...' : 'Deposit'}\n                </Button>\n                \n                <Button \n                  onClick={() => handleVaultOperation('withdraw')} \n                  disabled={withdraw.isPending || deposit_to_gamestate.isPending || !vaultAmount}\n                  variant=\"destructive\" \n                  className=\"flex-1\"\n                >\n                  {withdraw.isPending ? 'Withdrawing...' : 'Withdraw'}\n                </Button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Betting Section */}\n        <div className=\"bg-purple-50 rounded-lg p-4 border\">\n          <h4 className=\"font-semibold mb-3 flex items-center gap-2\">\n            <Coins className=\"h-4 w-4 text-purple-600\" />\n            Place Your Bet\n          </h4>\n          \n          <div className=\"space-y-4\">\n            <div className=\"flex items-center gap-2\">\n              <input\n                type=\"number\"\n                min={0}\n                step={0.1}\n                placeholder=\"Bet amount in SOL\"\n                value={placeBetAmount || ''}\n                onChange={(e) => setPlaceBetAmount(Number(e.target.value))}\n                disabled={betAccountQuery.placeBet.isPending}\n                className=\"flex-1 px-3 py-2 border rounded-md text-gray-900\"\n              />\n              <span className=\"text-sm text-gray-700\">SOL</span>\n            </div>\n\n            {/* Potential Winnings */}\n            {placeBetAmount > 0 && (\n              <div className=\"p-3 bg-yellow-50 rounded-lg border border-yellow-200\">\n                <p className=\"text-sm text-yellow-800\">\n                  <span className=\"font-medium\">Potential Winnings:</span> {potentialWinnings.toFixed(4)} SOL\n                </p>\n                <p className=\"text-xs text-yellow-700 mt-1\">\n                  2x bet amount minus {gameStateData.account.feePercentage.toString()}% house fee\n                </p>\n              </div>\n            )}\n\n            {/* Choice Buttons */}\n            <div className=\"flex gap-2\">\n              <Button\n                variant={betChoice === 0 ? 'default' : 'outline'}\n                onClick={() => setBetChoice(0)}\n                disabled={betAccountQuery.placeBet.isPending}\n                className={`flex-1 ${betChoice === 0 ? 'bg-orange-500 hover:bg-orange-600 text-white' : 'border-orange-500 text-orange-500 hover:bg-orange-50'}`}\n              >\n                🪙 Heads\n              </Button>\n              <Button\n                variant={betChoice === 1 ? 'default' : 'outline'}\n                onClick={() => setBetChoice(1)}\n                disabled={betAccountQuery.placeBet.isPending}\n                className={`flex-1 ${betChoice === 1 ? 'bg-blue-500 hover:bg-blue-600 text-white' : 'border-blue-500 text-blue-500 hover:bg-blue-50'}`}\n              >\n                🎯 Tails\n              </Button>\n            </div>\n\n            {/* Place Bet Button */}\n            <Button\n              onClick={handlePlaceBet}\n              disabled={betAccountQuery.placeBet.isPending || !placeBetAmount || placeBetAmount <= 0 || !wallet.publicKey}\n              className=\"w-full bg-gradient-to-r from-green-500 to-emerald-500 hover:from-green-600 hover:to-emerald-600 text-white font-semibold\"\n            >\n              {betAccountQuery.placeBet.isPending ? 'Flipping Coin...' : '🎲 Flip the Coin!'}\n            </Button>\n            \n            {/* Bet Result */}\n            {betResult === 'won' && (\n              <div className=\"text-center p-3 bg-green-50 rounded-lg border border-green-200\">\n                <p className=\"text-green-600 font-semibold\">🎉 You won the bet!</p>\n              </div>\n            )}\n            {betResult === 'lost' && (\n              <div className=\"text-center p-3 bg-red-50 rounded-lg border border-red-200\">\n                <p className=\"text-red-600 font-semibold\">😢 You lost the bet!</p>\n              </div>\n            )}\n            {betResult === 'pending' && (\n              <div className=\"text-center p-3 bg-yellow-50 rounded-lg border border-yellow-200\">\n                <p className=\"text-yellow-600 font-medium\">⏳ Processing your bet...</p>\n              </div>\n            )}\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  )\n}\n\nexport default function CoinFlip() {\n  return (\n    <div className=\"max-w-7xl mx-auto px-4 py-8 space-y-6\">\n      <CoinFlipCreate />\n      <CoinFlipList />\n    </div>\n  )\n}"],"names":[],"mappings":"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","debugId":null}}]
}